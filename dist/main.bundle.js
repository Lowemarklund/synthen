/******/ (function (modules) { // webpackBootstrap
  /******/ 	function hotDisposeChunk (chunkId) {
    /******/ 		delete installedChunks[chunkId]
  /******/ 	}
  /******/ 	var parentHotUpdateCallback = this['webpackHotUpdate']
  /******/ 	this['webpackHotUpdate'] =
/******/ 	function webpackHotUpdateCallback (chunkId, moreModules) { // eslint-disable-line no-unused-vars
  /******/ 		hotAddUpdateChunk(chunkId, moreModules)
  /******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules)
/******/ 	}
/******/
  /******/ 	function hotDownloadUpdateChunk (chunkId) { // eslint-disable-line no-unused-vars
    /******/ 		var head = document.getElementsByTagName('head')[0]
    /******/ 		var script = document.createElement('script')
    /******/ 		script.type = 'text/javascript'
    /******/ 		script.charset = 'utf-8'
    /******/ 		script.src = __webpack_require__.p + '' + chunkId + '.' + hotCurrentHash + '.hot-update.js'
    /******/ 		head.appendChild(script)
  /******/ 	}
/******/
  /******/ 	function hotDownloadManifest () { // eslint-disable-line no-unused-vars
    /******/ 		return new Promise(function (resolve, reject) {
      /******/ 			if (typeof XMLHttpRequest === 'undefined')
  /******/ 				{ return reject(new Error('No browser support')) }
      /******/ 			try {
        /******/ 				var request = new XMLHttpRequest()
        /******/ 				var requestPath = __webpack_require__.p + '' + hotCurrentHash + '.hot-update.json'
        /******/ 				request.open('GET', requestPath, true)
        /******/ 				request.timeout = 10000
        /******/ 				request.send(null)
      /******/ 			} catch (err) {
        /******/ 				return reject(err)
      /******/ 			}
      /******/ 			request.onreadystatechange = function () {
        /******/ 				if (request.readyState !== 4) return
        /******/ 				if (request.status === 0) {
/******/ 					// timeout
          /******/ 					reject(new Error('Manifest request to ' + requestPath + ' timed out.'))
        /******/ 				} else if (request.status === 404) {
/******/ 					// no update available
          /******/ 					resolve()
        /******/ 				} else if (request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
          /******/ 					reject(new Error('Manifest request to ' + requestPath + ' failed.'))
        /******/ 				} else {
/******/ 					// success
          /******/ 					try {
            /******/ 						var update = JSON.parse(request.responseText)
          /******/ 					} catch (e) {
            /******/ 						reject(e)
            /******/ 						return
          /******/ 					}
          /******/ 					resolve(update)
        /******/ 				}
      /******/ 			}
    /******/ 		})
  /******/ 	}
/******/
/******/
/******/
  /******/ 	var hotApplyOnUpdate = true
  /******/ 	var hotCurrentHash = '09dc4ab7d42779c45a8b' // eslint-disable-line no-unused-vars
  /******/ 	var hotCurrentModuleData = {}
  /******/ 	var hotCurrentChildModule // eslint-disable-line no-unused-vars
  /******/ 	var hotCurrentParents = [] // eslint-disable-line no-unused-vars
  /******/ 	var hotCurrentParentsTemp = [] // eslint-disable-line no-unused-vars
/******/
  /******/ 	function hotCreateRequire (moduleId) { // eslint-disable-line no-unused-vars
    /******/ 		var me = installedModules[moduleId]
    /******/ 		if (!me) return __webpack_require__
    /******/ 		var fn = function (request) {
      /******/ 			if (me.hot.active) {
        /******/ 				if (installedModules[request]) {
          /******/ 					if (installedModules[request].parents.indexOf(moduleId) < 0)
  /******/ 						{ installedModules[request].parents.push(moduleId) }
        /******/ 				} else {
          /******/ 					hotCurrentParents = [moduleId]
          /******/ 					hotCurrentChildModule = request
        /******/ 				}
        /******/ 				if (me.children.indexOf(request) < 0)
  /******/ 					{ me.children.push(request) }
      /******/ 			} else {
        /******/ 				console.warn('[HMR] unexpected require(' + request + ') from disposed module ' + moduleId)
        /******/ 				hotCurrentParents = []
      /******/ 			}
      /******/ 			return __webpack_require__(request)
    /******/ 		}
    /******/ 		var ObjectFactory = function ObjectFactory (name) {
      /******/ 			return {
        /******/ 				configurable: true,
        /******/ 				enumerable: true,
        /******/ 				get: function () {
          /******/ 					return __webpack_require__[name]
        /******/ 				},
        /******/ 				set: function (value) {
          /******/ 					__webpack_require__[name] = value
        /******/ 				}
      /******/ 			}
    /******/ 		}
    /******/ 		for (var name in __webpack_require__) {
      /******/ 			if (Object.prototype.hasOwnProperty.call(__webpack_require__, name) && name !== 'e') {
        /******/ 				Object.defineProperty(fn, name, ObjectFactory(name))
      /******/ 			}
    /******/ 		}
    /******/ 		fn.e = function (chunkId) {
      /******/ 			if (hotStatus === 'ready')
  /******/ 				{ hotSetStatus('prepare') }
      /******/ 			hotChunksLoading++
      /******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function (err) {
        /******/ 				finishChunkLoading()
        /******/ 				throw err
      /******/ 			})
/******/
      /******/ 			function finishChunkLoading () {
        /******/ 				hotChunksLoading--
        /******/ 				if (hotStatus === 'prepare') {
          /******/ 					if (!hotWaitingFilesMap[chunkId]) {
            /******/ 						hotEnsureUpdateChunk(chunkId)
          /******/ 					}
          /******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
            /******/ 						hotUpdateDownloaded()
          /******/ 					}
        /******/ 				}
      /******/ 			}
    /******/ 		}
    /******/ 		return fn
  /******/ 	}
/******/
  /******/ 	function hotCreateModule (moduleId) { // eslint-disable-line no-unused-vars
    /******/ 		var hot = {
/******/ 			// private stuff
      /******/ 			_acceptedDependencies: {},
      /******/ 			_declinedDependencies: {},
      /******/ 			_selfAccepted: false,
      /******/ 			_selfDeclined: false,
      /******/ 			_disposeHandlers: [],
      /******/ 			_main: hotCurrentChildModule !== moduleId,
/******/
/******/ 			// Module API
      /******/ 			active: true,
      /******/ 			accept: function (dep, callback) {
        /******/ 				if (typeof dep === 'undefined')
  /******/ 					{ hot._selfAccepted = true }
        /******/ 				else if (typeof dep === 'function')
  /******/ 					{ hot._selfAccepted = dep }
        /******/ 				else if (typeof dep === 'object')
  /******/ 					{
          for (var i = 0; i < dep.length; i++)
    /******/ 						{ hot._acceptedDependencies[dep[i]] = callback || function () {} }
        }
        /******/ 				else
/******/ 					{ hot._acceptedDependencies[dep] = callback || function () {} }
      /******/ 			},
      /******/ 			decline: function (dep) {
        /******/ 				if (typeof dep === 'undefined')
  /******/ 					{ hot._selfDeclined = true }
        /******/ 				else if (typeof dep === 'object')
  /******/ 					{
          for (var i = 0; i < dep.length; i++)
    /******/ 						{ hot._declinedDependencies[dep[i]] = true }
        }
        /******/ 				else
/******/ 					{ hot._declinedDependencies[dep] = true }
      /******/ 			},
      /******/ 			dispose: function (callback) {
        /******/ 				hot._disposeHandlers.push(callback)
      /******/ 			},
      /******/ 			addDisposeHandler: function (callback) {
        /******/ 				hot._disposeHandlers.push(callback)
      /******/ 			},
      /******/ 			removeDisposeHandler: function (callback) {
        /******/ 				var idx = hot._disposeHandlers.indexOf(callback)
        /******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1)
      /******/ 			},
/******/
/******/ 			// Management API
      /******/ 			check: hotCheck,
      /******/ 			apply: hotApply,
      /******/ 			status: function (l) {
        /******/ 				if (!l) return hotStatus
        /******/ 				hotStatusHandlers.push(l)
      /******/ 			},
      /******/ 			addStatusHandler: function (l) {
        /******/ 				hotStatusHandlers.push(l)
      /******/ 			},
      /******/ 			removeStatusHandler: function (l) {
        /******/ 				var idx = hotStatusHandlers.indexOf(l)
        /******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1)
      /******/ 			},
/******/
/******/ 			// inherit from previous dispose call
      /******/ 			data: hotCurrentModuleData[moduleId]
    /******/ 		}
    /******/ 		hotCurrentChildModule = undefined
    /******/ 		return hot
  /******/ 	}
/******/
  /******/ 	var hotStatusHandlers = []
  /******/ 	var hotStatus = 'idle'
/******/
  /******/ 	function hotSetStatus (newStatus) {
    /******/ 		hotStatus = newStatus
    /******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
  /******/ 			{ hotStatusHandlers[i].call(null, newStatus) }
  /******/ 	}
/******/
/******/ 	// while downloading
  /******/ 	var hotWaitingFiles = 0
  /******/ 	var hotChunksLoading = 0
  /******/ 	var hotWaitingFilesMap = {}
  /******/ 	var hotRequestedFilesMap = {}
  /******/ 	var hotAvailableFilesMap = {}
  /******/ 	var hotDeferred
/******/
/******/ 	// The update info
  /******/ 	var hotUpdate, hotUpdateNewHash
/******/
  /******/ 	function toModuleId (id) {
    /******/ 		var isNumber = (+id) + '' === id
    /******/ 		return isNumber ? +id : id
  /******/ 	}
/******/
  /******/ 	function hotCheck (apply) {
    /******/ 		if (hotStatus !== 'idle') throw new Error('check() is only allowed in idle status')
    /******/ 		hotApplyOnUpdate = apply
    /******/ 		hotSetStatus('check')
    /******/ 		return hotDownloadManifest().then(function (update) {
      /******/ 			if (!update) {
        /******/ 				hotSetStatus('idle')
        /******/ 				return null
      /******/ 			}
      /******/ 			hotRequestedFilesMap = {}
      /******/ 			hotWaitingFilesMap = {}
      /******/ 			hotAvailableFilesMap = update.c
      /******/ 			hotUpdateNewHash = update.h
/******/
      /******/ 			hotSetStatus('prepare')
      /******/ 			var promise = new Promise(function (resolve, reject) {
        /******/ 				hotDeferred = {
          /******/ 					resolve: resolve,
          /******/ 					reject: reject
        /******/ 				}
      /******/ 			})
      /******/ 			hotUpdate = {}
      /******/ 			var chunkId = 0
      /******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/* globals chunkId */
        /******/ 				hotEnsureUpdateChunk(chunkId)
      /******/ 			}
      /******/ 			if (hotStatus === 'prepare' && hotChunksLoading === 0 && hotWaitingFiles === 0) {
        /******/ 				hotUpdateDownloaded()
      /******/ 			}
      /******/ 			return promise
    /******/ 		})
  /******/ 	}
/******/
  /******/ 	function hotAddUpdateChunk (chunkId, moreModules) { // eslint-disable-line no-unused-vars
    /******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
  /******/ 			{ return }
    /******/ 		hotRequestedFilesMap[chunkId] = false
    /******/ 		for (var moduleId in moreModules) {
      /******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
        /******/ 				hotUpdate[moduleId] = moreModules[moduleId]
      /******/ 			}
    /******/ 		}
    /******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
      /******/ 			hotUpdateDownloaded()
    /******/ 		}
  /******/ 	}
/******/
  /******/ 	function hotEnsureUpdateChunk (chunkId) {
    /******/ 		if (!hotAvailableFilesMap[chunkId]) {
      /******/ 			hotWaitingFilesMap[chunkId] = true
    /******/ 		} else {
      /******/ 			hotRequestedFilesMap[chunkId] = true
      /******/ 			hotWaitingFiles++
      /******/ 			hotDownloadUpdateChunk(chunkId)
    /******/ 		}
  /******/ 	}
/******/
  /******/ 	function hotUpdateDownloaded () {
    /******/ 		hotSetStatus('ready')
    /******/ 		var deferred = hotDeferred
    /******/ 		hotDeferred = null
    /******/ 		if (!deferred) return
    /******/ 		if (hotApplyOnUpdate) {
      /******/ 			hotApply(hotApplyOnUpdate).then(function (result) {
        /******/ 				deferred.resolve(result)
      /******/ 			}, function (err) {
        /******/ 				deferred.reject(err)
      /******/ 			})
    /******/ 		} else {
      /******/ 			var outdatedModules = []
      /******/ 			for (var id in hotUpdate) {
        /******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
          /******/ 					outdatedModules.push(toModuleId(id))
        /******/ 				}
      /******/ 			}
      /******/ 			deferred.resolve(outdatedModules)
    /******/ 		}
  /******/ 	}
/******/
  /******/ 	function hotApply (options) {
    /******/ 		if (hotStatus !== 'ready') throw new Error('apply() is only allowed in ready status')
    /******/ 		options = options || {}
/******/
    /******/ 		var cb
    /******/ 		var i
    /******/ 		var j
    /******/ 		var module
    /******/ 		var moduleId
/******/
    /******/ 		function getAffectedStuff (updateModuleId) {
      /******/ 			var outdatedModules = [updateModuleId]
      /******/ 			var outdatedDependencies = {}
/******/
      /******/ 			var queue = outdatedModules.slice().map(function (id) {
        /******/ 				return {
          /******/ 					chain: [id],
          /******/ 					id: id
        /******/ 				}
      /******/ 			})
      /******/ 			while (queue.length > 0) {
        /******/ 				var queueItem = queue.pop()
        /******/ 				var moduleId = queueItem.id
        /******/ 				var chain = queueItem.chain
        /******/ 				module = installedModules[moduleId]
        /******/ 				if (!module || module.hot._selfAccepted)
  /******/ 					{ continue }
        /******/ 				if (module.hot._selfDeclined) {
          /******/ 					return {
            /******/ 						type: 'self-declined',
            /******/ 						chain: chain,
            /******/ 						moduleId: moduleId
          /******/ 					}
        /******/ 				}
        /******/ 				if (module.hot._main) {
          /******/ 					return {
            /******/ 						type: 'unaccepted',
            /******/ 						chain: chain,
            /******/ 						moduleId: moduleId
          /******/ 					}
        /******/ 				}
        /******/ 				for (var i = 0; i < module.parents.length; i++) {
          /******/ 					var parentId = module.parents[i]
          /******/ 					var parent = installedModules[parentId]
          /******/ 					if (!parent) continue
          /******/ 					if (parent.hot._declinedDependencies[moduleId]) {
            /******/ 						return {
              /******/ 							type: 'declined',
              /******/ 							chain: chain.concat([parentId]),
              /******/ 							moduleId: moduleId,
              /******/ 							parentId: parentId
            /******/ 						}
          /******/ 					}
          /******/ 					if (outdatedModules.indexOf(parentId) >= 0) continue
          /******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
            /******/ 						if (!outdatedDependencies[parentId])
  /******/ 							{ outdatedDependencies[parentId] = [] }
            /******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId])
            /******/ 						continue
          /******/ 					}
          /******/ 					delete outdatedDependencies[parentId]
          /******/ 					outdatedModules.push(parentId)
          /******/ 					queue.push({
            /******/ 						chain: chain.concat([parentId]),
            /******/ 						id: parentId
          /******/ 					})
        /******/ 				}
      /******/ 			}
/******/
      /******/ 			return {
        /******/ 				type: 'accepted',
        /******/ 				moduleId: updateModuleId,
        /******/ 				outdatedModules: outdatedModules,
        /******/ 				outdatedDependencies: outdatedDependencies
      /******/ 			}
    /******/ 		}
/******/
    /******/ 		function addAllToSet (a, b) {
      /******/ 			for (var i = 0; i < b.length; i++) {
        /******/ 				var item = b[i]
        /******/ 				if (a.indexOf(item) < 0)
  /******/ 					{ a.push(item) }
      /******/ 			}
    /******/ 		}
/******/
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
    /******/ 		var outdatedDependencies = {}
    /******/ 		var outdatedModules = []
    /******/ 		var appliedUpdate = {}
/******/
    /******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire () {
      /******/ 			console.warn('[HMR] unexpected require(' + result.moduleId + ') to disposed module')
    /******/ 		}
/******/
    /******/ 		for (var id in hotUpdate) {
      /******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
        /******/ 				moduleId = toModuleId(id)
        /******/ 				var result
        /******/ 				if (hotUpdate[id]) {
          /******/ 					result = getAffectedStuff(moduleId)
        /******/ 				} else {
          /******/ 					result = {
            /******/ 						type: 'disposed',
            /******/ 						moduleId: id
          /******/ 					}
        /******/ 				}
        /******/ 				var abortError = false
        /******/ 				var doApply = false
        /******/ 				var doDispose = false
        /******/ 				var chainInfo = ''
        /******/ 				if (result.chain) {
          /******/ 					chainInfo = '\nUpdate propagation: ' + result.chain.join(' -> ')
        /******/ 				}
        /******/ 				switch (result.type) {
          /******/ 					case 'self-declined':
            /******/ 						if (options.onDeclined)
  /******/ 							{ options.onDeclined(result) }
            /******/ 						if (!options.ignoreDeclined)
  /******/ 							{ abortError = new Error('Aborted because of self decline: ' + result.moduleId + chainInfo) }
            /******/ 						break
          /******/ 					case 'declined':
            /******/ 						if (options.onDeclined)
  /******/ 							{ options.onDeclined(result) }
            /******/ 						if (!options.ignoreDeclined)
  /******/ 							{ abortError = new Error('Aborted because of declined dependency: ' + result.moduleId + ' in ' + result.parentId + chainInfo) }
            /******/ 						break
          /******/ 					case 'unaccepted':
            /******/ 						if (options.onUnaccepted)
  /******/ 							{ options.onUnaccepted(result) }
            /******/ 						if (!options.ignoreUnaccepted)
  /******/ 							{ abortError = new Error('Aborted because ' + moduleId + ' is not accepted' + chainInfo) }
            /******/ 						break
          /******/ 					case 'accepted':
            /******/ 						if (options.onAccepted)
  /******/ 							{ options.onAccepted(result) }
            /******/ 						doApply = true
            /******/ 						break
          /******/ 					case 'disposed':
            /******/ 						if (options.onDisposed)
  /******/ 							{ options.onDisposed(result) }
            /******/ 						doDispose = true
            /******/ 						break
          /******/ 					default:
            /******/ 						throw new Error('Unexception type ' + result.type)
        /******/ 				}
        /******/ 				if (abortError) {
          /******/ 					hotSetStatus('abort')
          /******/ 					return Promise.reject(abortError)
        /******/ 				}
        /******/ 				if (doApply) {
          /******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId]
          /******/ 					addAllToSet(outdatedModules, result.outdatedModules)
          /******/ 					for (moduleId in result.outdatedDependencies) {
            /******/ 						if (Object.prototype.hasOwnProperty.call(result.outdatedDependencies, moduleId)) {
              /******/ 							if (!outdatedDependencies[moduleId])
  /******/ 								{ outdatedDependencies[moduleId] = [] }
              /******/ 							addAllToSet(outdatedDependencies[moduleId], result.outdatedDependencies[moduleId])
            /******/ 						}
          /******/ 					}
        /******/ 				}
        /******/ 				if (doDispose) {
          /******/ 					addAllToSet(outdatedModules, [result.moduleId])
          /******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire
        /******/ 				}
      /******/ 			}
    /******/ 		}
/******/
/******/ 		// Store self accepted outdated modules to require them later by the module system
    /******/ 		var outdatedSelfAcceptedModules = []
    /******/ 		for (i = 0; i < outdatedModules.length; i++) {
      /******/ 			moduleId = outdatedModules[i]
      /******/ 			if (installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
  /******/ 				{
        outdatedSelfAcceptedModules.push({
          /******/ 					module: moduleId,
          /******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
        /******/ 				})
      }
    /******/ 		}
/******/
/******/ 		// Now in "dispose" phase
    /******/ 		hotSetStatus('dispose')
    /******/ 		Object.keys(hotAvailableFilesMap).forEach(function (chunkId) {
      /******/ 			if (hotAvailableFilesMap[chunkId] === false) {
        /******/ 				hotDisposeChunk(chunkId)
      /******/ 			}
    /******/ 		})
/******/
    /******/ 		var idx
    /******/ 		var queue = outdatedModules.slice()
    /******/ 		while (queue.length > 0) {
      /******/ 			moduleId = queue.pop()
      /******/ 			module = installedModules[moduleId]
      /******/ 			if (!module) continue
/******/
      /******/ 			var data = {}
/******/
/******/ 			// Call dispose handlers
      /******/ 			var disposeHandlers = module.hot._disposeHandlers
      /******/ 			for (j = 0; j < disposeHandlers.length; j++) {
        /******/ 				cb = disposeHandlers[j]
        /******/ 				cb(data)
      /******/ 			}
      /******/ 			hotCurrentModuleData[moduleId] = data
/******/
/******/ 			// disable module (this disables requires from this module)
      /******/ 			module.hot.active = false
/******/
/******/ 			// remove module from cache
      /******/ 			delete installedModules[moduleId]
/******/
/******/ 			// remove "parents" references from all children
      /******/ 			for (j = 0; j < module.children.length; j++) {
        /******/ 				var child = installedModules[module.children[j]]
        /******/ 				if (!child) continue
        /******/ 				idx = child.parents.indexOf(moduleId)
        /******/ 				if (idx >= 0) {
          /******/ 					child.parents.splice(idx, 1)
        /******/ 				}
      /******/ 			}
    /******/ 		}
/******/
/******/ 		// remove outdated dependency from module children
    /******/ 		var dependency
    /******/ 		var moduleOutdatedDependencies
    /******/ 		for (moduleId in outdatedDependencies) {
      /******/ 			if (Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
        /******/ 				module = installedModules[moduleId]
        /******/ 				if (module) {
          /******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId]
          /******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
            /******/ 						dependency = moduleOutdatedDependencies[j]
            /******/ 						idx = module.children.indexOf(dependency)
            /******/ 						if (idx >= 0) module.children.splice(idx, 1)
          /******/ 					}
        /******/ 				}
      /******/ 			}
    /******/ 		}
/******/
/******/ 		// Not in "apply" phase
    /******/ 		hotSetStatus('apply')
/******/
    /******/ 		hotCurrentHash = hotUpdateNewHash
/******/
/******/ 		// insert new code
    /******/ 		for (moduleId in appliedUpdate) {
      /******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
        /******/ 				modules[moduleId] = appliedUpdate[moduleId]
      /******/ 			}
    /******/ 		}
/******/
/******/ 		// call accept handlers
    /******/ 		var error = null
    /******/ 		for (moduleId in outdatedDependencies) {
      /******/ 			if (Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
        /******/ 				module = installedModules[moduleId]
        /******/ 				moduleOutdatedDependencies = outdatedDependencies[moduleId]
        /******/ 				var callbacks = []
        /******/ 				for (i = 0; i < moduleOutdatedDependencies.length; i++) {
          /******/ 					dependency = moduleOutdatedDependencies[i]
          /******/ 					cb = module.hot._acceptedDependencies[dependency]
          /******/ 					if (callbacks.indexOf(cb) >= 0) continue
          /******/ 					callbacks.push(cb)
        /******/ 				}
        /******/ 				for (i = 0; i < callbacks.length; i++) {
          /******/ 					cb = callbacks[i]
          /******/ 					try {
            /******/ 						cb(moduleOutdatedDependencies)
          /******/ 					} catch (err) {
            /******/ 						if (options.onErrored) {
              /******/ 							options.onErrored({
                /******/ 								type: 'accept-errored',
                /******/ 								moduleId: moduleId,
                /******/ 								dependencyId: moduleOutdatedDependencies[i],
                /******/ 								error: err
              /******/ 							})
            /******/ 						}
            /******/ 						if (!options.ignoreErrored) {
              /******/ 							if (!error)
  /******/ 								{ error = err }
            /******/ 						}
          /******/ 					}
        /******/ 				}
      /******/ 			}
    /******/ 		}
/******/
/******/ 		// Load self accepted modules
    /******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
      /******/ 			var item = outdatedSelfAcceptedModules[i]
      /******/ 			moduleId = item.module
      /******/ 			hotCurrentParents = [moduleId]
      /******/ 			try {
        /******/ 				__webpack_require__(moduleId)
      /******/ 			} catch (err) {
        /******/ 				if (typeof item.errorHandler === 'function') {
          /******/ 					try {
            /******/ 						item.errorHandler(err)
          /******/ 					} catch (err2) {
            /******/ 						if (options.onErrored) {
              /******/ 							options.onErrored({
                /******/ 								type: 'self-accept-error-handler-errored',
                /******/ 								moduleId: moduleId,
                /******/ 								error: err2,
                /******/ 								orginalError: err
              /******/ 							})
            /******/ 						}
            /******/ 						if (!options.ignoreErrored) {
              /******/ 							if (!error)
  /******/ 								{ error = err2 }
            /******/ 						}
            /******/ 						if (!error)
  /******/ 							{ error = err }
          /******/ 					}
        /******/ 				} else {
          /******/ 					if (options.onErrored) {
            /******/ 						options.onErrored({
              /******/ 							type: 'self-accept-errored',
              /******/ 							moduleId: moduleId,
              /******/ 							error: err
            /******/ 						})
          /******/ 					}
          /******/ 					if (!options.ignoreErrored) {
            /******/ 						if (!error)
  /******/ 							{ error = err }
          /******/ 					}
        /******/ 				}
      /******/ 			}
    /******/ 		}
/******/
/******/ 		// handle errors in accept handlers and self accepted module load
    /******/ 		if (error) {
      /******/ 			hotSetStatus('fail')
      /******/ 			return Promise.reject(error)
    /******/ 		}
/******/
    /******/ 		hotSetStatus('idle')
    /******/ 		return new Promise(function (resolve) {
      /******/ 			resolve(outdatedModules)
    /******/ 		})
  /******/ 	}
/******/
/******/ 	// The module cache
  /******/ 	var installedModules = {}
/******/
/******/ 	// The require function
  /******/ 	function __webpack_require__ (moduleId) {
/******/
/******/ 		// Check if module is in cache
    /******/ 		if (installedModules[moduleId]) {
      /******/ 			return installedModules[moduleId].exports
    /******/ 		}
/******/ 		// Create a new module (and put it into the cache)
    /******/ 		var module = installedModules[moduleId] = {
      /******/ 			i: moduleId,
      /******/ 			l: false,
      /******/ 			exports: {},
      /******/ 			hot: hotCreateModule(moduleId),
      /******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
      /******/ 			children: []
    /******/ 		}
/******/
/******/ 		// Execute the module function
    /******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId))
/******/
/******/ 		// Flag the module as loaded
    /******/ 		module.l = true
/******/
/******/ 		// Return the exports of the module
    /******/ 		return module.exports
  /******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
  /******/ 	__webpack_require__.m = modules
/******/
/******/ 	// expose the module cache
  /******/ 	__webpack_require__.c = installedModules
/******/
/******/ 	// identity function for calling harmony imports with the correct context
  /******/ 	__webpack_require__.i = function (value) { return value }
/******/
/******/ 	// define getter function for harmony exports
  /******/ 	__webpack_require__.d = function (exports, name, getter) {
    /******/ 		if (!__webpack_require__.o(exports, name)) {
      /******/ 			Object.defineProperty(exports, name, {
        /******/ 				configurable: false,
        /******/ 				enumerable: true,
        /******/ 				get: getter
      /******/ 			})
    /******/ 		}
  /******/ 	}
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
  /******/ 	__webpack_require__.n = function (module) {
    /******/ 		var getter = module && module.__esModule
/******/ 			? function getDefault () { return module['default'] }
/******/ 			: function getModuleExports () { return module }
    /******/ 		__webpack_require__.d(getter, 'a', getter)
    /******/ 		return getter
  /******/ 	}
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
  /******/ 	__webpack_require__.o = function (object, property) { return Object.prototype.hasOwnProperty.call(object, property) }
/******/
/******/ 	// __webpack_public_path__
  /******/ 	__webpack_require__.p = '/'
/******/
/******/ 	// __webpack_hash__
  /******/ 	__webpack_require__.h = function () { return hotCurrentHash }
/******/
/******/ 	// Load entry module and return exports
  /******/ 	return hotCreateRequire(8)(__webpack_require__.s = 8)
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
  /***/ function (module, exports, __webpack_require__) {
    eval("const Sequencer = __webpack_require__(2)\n\nlet newSequencer = new Sequencer()\n\nnewSequencer._synth._sequencer = newSequencer\n\ndocument.querySelector('body').insertBefore(newSequencer._synth, document.querySelector('body').children[0])\ndocument.querySelector('body').insertBefore(newSequencer, document.querySelector('body').children[0])\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3JjL2pzL2FwcC5qcz9iODNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBOztBQUVBO0FBQ0EiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcXVlbmNlciA9IHJlcXVpcmUoJy4vc2VxdWVuY2VyJylcblxubGV0IG5ld1NlcXVlbmNlciA9IG5ldyBTZXF1ZW5jZXIoKVxuXG5uZXdTZXF1ZW5jZXIuX3N5bnRoLl9zZXF1ZW5jZXIgPSBuZXdTZXF1ZW5jZXJcblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmluc2VydEJlZm9yZShuZXdTZXF1ZW5jZXIuX3N5bnRoLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykuY2hpbGRyZW5bMF0pXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JykuaW5zZXJ0QmVmb3JlKG5ld1NlcXVlbmNlciwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmNoaWxkcmVuWzBdKVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hcHAvc3JjL2pzL2FwcC5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")
  /***/ },
/* 1 */
  /***/ function (module, exports, __webpack_require__) {
    eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root) {\n  'use strict'\n\n  var Pizzicato = {}\n  var Pz = Pizzicato\n  var commonJS = typeof module === 'object' && module.exports\n  var amd = \"function\" === 'function' && __webpack_require__(6)\n\n  if (commonJS) { module.exports = Pizzicato } else if (amd) { !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (Pizzicato),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else\t\t{ root.Pizzicato = root.Pz = Pizzicato }\n\n  var AudioContext = root.AudioContext || root.webkitAudioContext\n\n  if (!AudioContext) {\n    console.error('No AudioContext found in this environment. Please ensure your window or global object contains a working AudioContext constructor function.')\n    return\n  }\n\n  Pizzicato.context = new AudioContext()\n\n  var masterGainNode = Pizzicato.context.createGain()\n  masterGainNode.connect(Pizzicato.context.destination)\n\n  Pizzicato.Util = {\n\n    isString: function (arg) {\n      return toString.call(arg) === '[object String]'\n    },\n\n    isObject: function (arg) {\n      return toString.call(arg) === '[object Object]'\n    },\n\n    isFunction: function (arg) {\n      return toString.call(arg) === '[object Function]'\n    },\n\n    isNumber: function (arg) {\n      return toString.call(arg) === '[object Number]' && arg === +arg\n    },\n\n    isArray: function (arg) {\n      return toString.call(arg) === '[object Array]'\n    },\n\n    isInRange: function (arg, min, max) {\n      if (!Pz.Util.isNumber(arg) || !Pz.Util.isNumber(min) || !Pz.Util.isNumber(max)) { return false }\n\n      return arg >= min && arg <= max\n    },\n\n    isBool: function (arg) {\n      return typeof (arg) === 'boolean'\n    },\n\n    isOscillator: function (audioNode) {\n      return (audioNode && audioNode.toString() === '[object OscillatorNode]')\n    },\n\n    isAudioBufferSourceNode: function (audioNode) {\n      return (audioNode && audioNode.toString() === '[object AudioBufferSourceNode]')\n    },\n\n    isSound: function (sound) {\n      return sound instanceof Pz.Sound\n    },\n\n    isEffect: function (effect) {\n      for (var key in Pizzicato.Effects) {\n        if (effect instanceof Pizzicato.Effects[key]) { return true }\n      }\n\n      return false\n    },\n\n\t\t// Takes a number from 0 to 1 and normalizes it to fit within range floor to ceiling\n    normalize: function (num, floor, ceil) {\n      if (!Pz.Util.isNumber(num) || !Pz.Util.isNumber(floor) || !Pz.Util.isNumber(ceil)) { return }\n\n      return ((ceil - floor) * num) / 1 + floor\n    },\n\n    getDryLevel: function (mix) {\n      if (!Pz.Util.isNumber(mix) || mix > 1 || mix < 0) { return 0 }\n\n      if (mix <= 0.5) { return 1 }\n\n      return 1 - ((mix - 0.5) * 2)\n    },\n\n    getWetLevel: function (mix) {\n      if (!Pz.Util.isNumber(mix) || mix > 1 || mix < 0) { return 0 }\n\n      if (mix >= 0.5) { return 1 }\n\n      return 1 - ((0.5 - mix) * 2)\n    }\n  }\n\t/* In order to allow an AudioNode to connect to a Pizzicato\n\tEffect object, we must shim its connect method */\n  var gainNode = Pizzicato.context.createGain()\n  var audioNode = Object.getPrototypeOf(Object.getPrototypeOf(gainNode))\n  var connect = audioNode.connect\n\n  audioNode.connect = function (node) {\n    var endpoint = Pz.Util.isEffect(node) ? node.inputNode : node\n    connect.call(this, endpoint)\n    return node\n  }\n\n  Object.defineProperty(Pizzicato, 'volume', {\n    enumerable: true,\n\n    get: function () {\n      return masterGainNode.gain.value\n    },\n\n    set: function (volume) {\n      if (Pz.Util.isInRange(volume, 0, 1) && masterGainNode) { masterGainNode.gain.value = volume }\n    }\n  })\n\n  Object.defineProperty(Pizzicato, 'masterGainNode', {\n    enumerable: false,\n\n    get: function () {\n      return masterGainNode\n    },\n\n    set: function (volume) {\n      console.error('Can\\'t set the master gain node')\n    }\n  })\n  Pizzicato.Events = {\n\n\t\t\t/**\n\t\t\t * Adds an event handler that will be treated upon\n\t\t\t * the triggering of that event.\n\t\t\t */\n    on: function (name, callback, context) {\n      if (!name || !callback) { return }\n\n      this._events = this._events || {}\n      var _event = this._events[name] || (this._events[name] = [])\n\n      _event.push({\n        callback: callback,\n        context: context || this,\n        handler: this\n      })\n    },\n\n\t\t\t/**\n\t\t\t * Triggers a particular event. If a handler\n\t\t\t * is linked to that event, the handler will be\n\t\t\t * executed.\n\t\t\t */\n    trigger: function (name) {\n      if (!name) { return }\n\n      var _event, length, args, i\n\n      this._events = this._events || {}\n      _event = this._events[name] || (this._events[name] = [])\n\n      if (!_event) { return }\n\n      length = Math.max(0, arguments.length - 1)\n      args = []\n\n      for (i = 0; i < length; i++) { args[i] = arguments[i + 1] }\n\n      for (i = 0; i < _event.length; i++) { _event[i].callback.apply(_event[i].context, args) }\n    },\n\n\t\t\t/**\n\t\t\t * Removes an event handler. If no name is provided,\n\t\t\t * all handlers for this object will be removed.\n\t\t\t */\n    off: function (name) {\n      if (name) { this._events[name] = undefined } else\t\t\t\t\t{ this._events = {} }\n    }\n\n  }\n  Pizzicato.Sound = function (description, callback) {\n    var self = this\n    var util = Pizzicato.Util\n    var descriptionError = getDescriptionError(description)\n    var hasOptions = util.isObject(description) && util.isObject(description.options)\n    var defaultAttack = 0.04\n    var defaultRelease = 0.04\n\n    if (descriptionError) {\n      console.error(descriptionError)\n      throw new Error('Error initializing Pizzicato Sound: ' + descriptionError)\n    }\n\n    this.detached = hasOptions && description.options.detached\n    this.masterVolume = Pizzicato.context.createGain()\n    this.fadeNode = Pizzicato.context.createGain()\n    this.fadeNode.gain.value = 0\n\n    if (!this.detached) { this.masterVolume.connect(Pizzicato.masterGainNode) }\n\n    this.lastTimePlayed = 0\n    this.effects = []\n    this.effectConnectors = []\n    this.playing = this.paused = false\n    this.loop = hasOptions && description.options.loop\n    this.attack = hasOptions && util.isNumber(description.options.attack) ? description.options.attack : defaultAttack\n    this.volume = hasOptions && util.isNumber(description.options.volume) ? description.options.volume : 1\n\n    if (hasOptions && util.isNumber(description.options.release)) {\n      this.release = description.options.release\n    } else if (hasOptions && util.isNumber(description.options.sustain)) {\n      console.warn('\\'sustain\\' is deprecated. Use \\'release\\' instead.')\n      this.release = description.options.sustain\n    } else {\n      this.release = defaultRelease\n    }\n\n    if (!description) { (initializeWithWave.bind(this))({}, callback) } else if (util.isString(description)) { (initializeWithUrl.bind(this))(description, callback) } else if (util.isFunction(description)) { (initializeWithFunction.bind(this))(description, callback) } else if (description.source === 'file') { (initializeWithUrl.bind(this))(description.options.path, callback) } else if (description.source === 'wave') { (initializeWithWave.bind(this))(description.options, callback) } else if (description.source === 'input') { (initializeWithInput.bind(this))(description, callback) } else if (description.source === 'script') { (initializeWithFunction.bind(this))(description.options, callback) } else if (description.source === 'sound') { (initializeWithSoundObject.bind(this))(description.options, callback) }\n\n    function getDescriptionError (description) {\n      var supportedSources = ['wave', 'file', 'input', 'script', 'sound']\n\n      if (description && (!util.isFunction(description) && !util.isString(description) && !util.isObject(description))) { return 'Description type not supported. Initialize a sound using an object, a function or a string.' }\n\n      if (util.isObject(description)) {\n        if (!util.isString(description.source) || supportedSources.indexOf(description.source) === -1) { return 'Specified source not supported. Sources can be wave, file, input or script' }\n\n        if (description.source === 'file' && (!description.options || !description.options.path)) { return 'A path is needed for sounds with a file source' }\n\n        if (description.source === 'script' && (!description.options || !description.options.audioFunction)) { return 'An audio function is needed for sounds with a script source' }\n      }\n    }\n\n    function initializeWithWave (waveOptions, callback) {\n      waveOptions = waveOptions || {}\n      this.getRawSourceNode = function () {\n        var frequency = this.sourceNode ? this.sourceNode.frequency.value : waveOptions.frequency\n        var node = Pizzicato.context.createOscillator()\n        node.type = waveOptions.type || 'sine'\n        node.frequency.value = (frequency || 440)\n\n        return node\n      }\n      this.sourceNode = this.getRawSourceNode()\n      this.sourceNode.gainSuccessor = Pz.context.createGain()\n      this.sourceNode.connect(this.sourceNode.gainSuccessor)\n\n      if (util.isFunction(callback)) { callback() }\n    }\n\n    function initializeWithUrl (paths, callback) {\n      paths = util.isArray(paths) ? paths : [paths]\n\n      var request = new XMLHttpRequest()\n      request.open('GET', paths[0], true)\n      request.responseType = 'arraybuffer'\n\n      request.onload = function (progressEvent) {\n        Pizzicato.context.decodeAudioData(progressEvent.target.response, function (buffer) {\n          self.getRawSourceNode = function () {\n            var node = Pizzicato.context.createBufferSource()\n            node.loop = this.loop\n            node.buffer = buffer\n            return node\n          }\n          if (util.isFunction(callback)) { callback() }\n        }, function (error) {\n          console.error('Error decoding audio file ' + paths[0])\n\n          if (paths.length > 1) {\n            paths.shift()\n            initializeWithUrl(paths, callback)\n            return\n          }\n\n          error = error || new Error('Error decoding audio file ' + paths[0])\n\n          if (util.isFunction(callback)) { callback(error) }\n        })\n      }\n      request.onreadystatechange = function (event) {\n        if (request.readyState === 4 && request.status !== 200) {\n          console.error('Error while fetching ' + paths[0] + '. ' + request.statusText)\n        }\n      }\n      request.send()\n    }\n\n    function initializeWithInput (options, callback) {\n      navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia)\n\n      if (!navigator.getUserMedia) {\n        console.error('Your browser does not support getUserMedia')\n        return\n      }\n\n      navigator.getUserMedia({\n        audio: true\n      }, function (stream) {\n        self.getRawSourceNode = function () {\n          return Pizzicato.context.createMediaStreamSource(stream)\n        }\n        if (util.isFunction(callback)) { callback() }\n      }, function (error) {\n        if (util.isFunction(callback)) { callback(error) }\n      })\n    }\n\n    function initializeWithFunction (options, callback) {\n      var audioFunction = util.isFunction(options) ? options : options.audioFunction\n      var bufferSize = util.isObject(options) && options.bufferSize ? options.bufferSize : null\n\n      if (!bufferSize) {\n        try { // Webkit does not automatically chose the buffer size\n          var test = Pizzicato.context.createScriptProcessor()\n        } catch (e) {\n          bufferSize = 2048\n        }\n      }\n\n      this.getRawSourceNode = function () {\n        var node = Pizzicato.context.createScriptProcessor(bufferSize, 1, 1)\n        node.onaudioprocess = audioFunction\n        return node\n      }\n    }\n\n    function initializeWithSoundObject (options, callback) {\n      this.getRawSourceNode = options.sound.getRawSourceNode\n\n      if (options.sound.sourceNode && Pz.Util.isOscillator(options.sound.sourceNode)) {\n        this.sourceNode = this.getRawSourceNode()\n        this.frequency = options.sound.frequency\n      }\n    }\n  }\n\n  Pizzicato.Sound.prototype = Object.create(Pizzicato.Events, {\n\n    play: {\n      enumerable: true,\n\n      value: function (when, offset) {\n        if (this.playing) { return }\n\n        if (!Pz.Util.isNumber(offset)) { offset = this.offsetTime || 0 }\n\n        if (!Pz.Util.isNumber(when)) { when = 0 }\n\n        this.playing = true\n        this.paused = false\n        this.sourceNode = this.getSourceNode()\n\n        this.applyAttack()\n\n        if (Pz.Util.isFunction(this.sourceNode.start)) {\n          this.lastTimePlayed = Pizzicato.context.currentTime - offset\n          this.sourceNode.start(Pz.context.currentTime + when, offset)\n        }\n\n        this.trigger('play')\n      }\n    },\n\n    stop: {\n      enumerable: true,\n\n      value: function () {\n        if (!this.paused && !this.playing) { return }\n\n        this.paused = this.playing = false\n        this.stopWithRelease()\n\n        this.offsetTime = 0\n        this.trigger('stop')\n      }\n    },\n\n    pause: {\n      enumerable: true,\n\n      value: function () {\n        if (this.paused || !this.playing) { return }\n\n        this.paused = true\n        this.playing = false\n\n        this.stopWithRelease()\n\n        var elapsedTime = Pz.context.currentTime - this.lastTimePlayed\n\n\t\t\t\t// If we are using a buffer node - potentially in loop mode - we need to\n\t\t\t\t// know where to re-start the sound independently of the loop it is in.\n        if (this.sourceNode.buffer) { this.offsetTime = elapsedTime % (this.sourceNode.buffer.length / Pz.context.sampleRate) } else\t\t\t\t\t{ this.offsetTime = elapsedTime }\n\n        this.trigger('pause')\n      }\n    },\n\n    clone: {\n      enumerable: true,\n\n      value: function () {\n        var clone = new Pizzicato.Sound({\n          source: 'sound',\n          options: {\n            loop: this.loop,\n            attack: this.attack,\n            release: this.release,\n            volume: this.volume,\n            sound: this\n          }\n        })\n\n        for (var i = 0; i < this.effects.length; i++) { clone.addEffect(this.effects[i]) }\n\n        return clone\n      }\n    },\n\n    onEnded: {\n      enumerable: true,\n\n      value: function (node) {\n        return function () {\n\t\t\t\t\t// This function may've been called from the release\n\t\t\t\t\t// end. If in that time the Sound has been played again,\n\t\t\t\t\t// no action should be taken.\n          if (!!this.sourceNode && this.sourceNode !== node) { return }\n\n          if (this.playing) { this.stop() }\n          if (!this.paused) { this.trigger('end') }\n        }\n      }\n    },\n\n\t\t/**\n\t\t * Adding effects will create a graph in which there will be a\n\t\t * gain node (effectConnector) in between every effect added. For example:\n\t\t * [fadeNode]--->[effect 1]->[connector 1]--->[effect 2]->[connector 2]--->[masterGain]\n\t\t *\n\t\t * Connectors are used to know what nodes to disconnect and not disrupt the\n\t\t * connections of another Pz.Sound object using the same effect.\n\t\t */\n    addEffect: {\n      enumerable: true,\n\n      value: function (effect) {\n        if (!Pz.Util.isEffect(effect)) {\n          console.error('The object provided is not a Pizzicato effect.')\n          return this\n        }\n\n        this.effects.push(effect)\n\n\t\t\t\t// Connects effect in the last position\n        var previousNode = this.effectConnectors.length > 0 ? this.effectConnectors[this.effectConnectors.length - 1] : this.fadeNode\n        previousNode.disconnect()\n        previousNode.connect(effect)\n\n\t\t\t\t// Creates connector for the newly added effect\n        var gain = Pz.context.createGain()\n        this.effectConnectors.push(gain)\n        effect.connect(gain)\n        gain.connect(this.masterVolume)\n\n        return this\n      }\n    },\n\n\t\t/**\n\t\t * When removing effects, the graph in which there will be a\n\t\t * gain node (effectConnector) in between every effect should be\n\t\t * conserved. For example:\n\t\t * [fadeNode]--->[effect 1]->[connector 1]--->[effect 2]->[connector 2]--->[masterGain]\n\t\t *\n\t\t * Connectors are used to know what nodes to disconnect and not disrupt the\n\t\t * connections of another Pz.Sound object using the same effect.\n\t\t */\n    removeEffect: {\n      enumerable: true,\n\n      value: function (effect) {\n        var index = this.effects.indexOf(effect)\n\n        if (index === -1) {\n          console.warn('Cannot remove effect that is not applied to this sound.')\n          return this\n        }\n\n        var shouldResumePlaying = this.playing\n\n        if (shouldResumePlaying) { this.pause() }\n\n        var previousNode = (index === 0) ? this.fadeNode : this.effectConnectors[index - 1]\n        previousNode.disconnect()\n\n\t\t\t\t// Disconnect connector and effect\n        var effectConnector = this.effectConnectors[index]\n        effectConnector.disconnect()\n        effect.disconnect(effectConnector)\n\n\t\t\t\t// Remove connector and effect from our arrays\n        this.effectConnectors.splice(index, 1)\n        this.effects.splice(index, 1)\n\n        var targetNode\n        if (index > this.effects.length - 1 || this.effects.length === 0) { targetNode = this.masterVolume } else\t\t\t\t\t{ targetNode = this.effects[index] }\n\n        previousNode.connect(targetNode)\n\n        if (shouldResumePlaying) { this.play() }\n\n        return this\n      }\n    },\n\n    connect: {\n      enumerable: true,\n\n      value: function (audioNode) {\n        this.masterVolume.connect(audioNode)\n        return this\n      }\n    },\n\n    disconnect: {\n      enumerable: true,\n\n      value: function (audioNode) {\n        this.masterVolume.disconnect(audioNode)\n        return this\n      }\n    },\n\n    connectEffects: {\n      enumerable: true,\n\n      value: function () {\n        var connectors = []\n\n        for (var i = 0; i < this.effects.length; i++) {\n          var isLastEffect = i === this.effects.length - 1\n          var destinationNode = isLastEffect ? this.masterVolume : this.effects[i + 1].inputNode\n\n          connectors[i] = Pz.context.createGain()\n\n          this.effects[i].outputNode.disconnect(this.effectConnectors[i])\n\n          this.effects[i].outputNode.connect(destinationNode)\n        }\n      }\n    },\n\n    volume: {\n      enumerable: true,\n\n      get: function () {\n        if (this.masterVolume) { return this.masterVolume.gain.value }\n      },\n\n      set: function (volume) {\n        if (Pz.Util.isInRange(volume, 0, 1) && this.masterVolume) { this.masterVolume.gain.value = volume }\n      }\n    },\n\n    frequency: {\n      enumerable: true,\n\n      get: function () {\n        if (this.sourceNode && Pz.Util.isOscillator(this.sourceNode)) {\n          return this.sourceNode.frequency.value\n        }\n\n        return null\n      },\n\n      set: function (frequency) {\n        if (this.sourceNode && Pz.Util.isOscillator(this.sourceNode)) {\n          this.sourceNode.frequency.value = frequency\n        }\n      }\n    },\n\n\t\t/**\n\t \t * @deprecated - Use \"release\"\n\t\t */\n    sustain: {\n      enumerable: true,\n\n      get: function () {\n        console.warn('\\'sustain\\' is deprecated. Use \\'release\\' instead.')\n        return this.release\n      },\n\n      set: function (sustain) {\n        console.warn('\\'sustain\\' is deprecated. Use \\'release\\' instead.')\n\n        if (Pz.Util.isInRange(sustain, 0, 10)) { this.release = sustain }\n      }\n    },\n\n\t\t/**\n\t\t * Returns the node that produces the sound. For example, an oscillator\n\t\t * if the Sound object was initialized with a wave option.\n\t\t */\n    getSourceNode: {\n      enumerable: true,\n\n      value: function () {\n        if (this.sourceNode) {\n\t\t\t\t\t// Directly disconnecting the previous source node causes a\n\t\t\t\t\t// 'click' noise, especially noticeable if the sound is played\n\t\t\t\t\t// while the release is ongoing. To address this, we fadeout the\n\t\t\t\t\t// old source node before disonnecting it.\n\n          var previousSourceNode = this.sourceNode\n          previousSourceNode.gainSuccessor.gain.setValueAtTime(previousSourceNode.gainSuccessor.gain.value, Pz.context.currentTime)\n          previousSourceNode.gainSuccessor.gain.linearRampToValueAtTime(0.0001, Pz.context.currentTime + 0.2)\n          setTimeout(function () {\n            previousSourceNode.disconnect()\n            previousSourceNode.gainSuccessor.disconnect()\n          }, 200)\n        }\n\n        var sourceNode = this.getRawSourceNode()\n\n\t\t\t\t// A gain node will be placed after the source node to avoid\n\t\t\t\t// clicking noises (by fading out the sound)\n        sourceNode.gainSuccessor = Pz.context.createGain()\n        sourceNode.connect(sourceNode.gainSuccessor)\n        sourceNode.gainSuccessor.connect(this.fadeNode)\n        this.fadeNode.connect(this.getInputNode())\n\n        if (Pz.Util.isAudioBufferSourceNode(sourceNode)) { sourceNode.onended = this.onEnded(sourceNode).bind(this) }\n\n        return sourceNode\n      }\n    },\n\n\t\t/**\n\t\t * Returns the first node in the graph. When there are effects,\n\t\t * the first node is the input node of the first effect.\n\t\t */\n    getInputNode: {\n      enumerable: true,\n\n      value: function () {\n        if (this.effects.length > 0) { return this.effects[0].inputNode }\n\n        return this.masterVolume\n      }\n    },\n\n\t\t/**\n\t\t * Will take the current source node and work up the volume\n\t\t * gradually in as much time as specified in the attack property\n\t\t * of the sound.\n\t\t */\n    applyAttack: {\n      enumerable: false,\n\n      value: function () {\n        var currentValue = this.fadeNode.gain.value\n        this.fadeNode.gain.cancelScheduledValues(Pz.context.currentTime)\n        this.fadeNode.gain.setValueAtTime(currentValue, Pz.context.currentTime)\n\n        if (!this.attack) {\n          this.fadeNode.gain.setValueAtTime(1.0, Pizzicato.context.currentTime)\n          return\n        }\n\n        var remainingAttackTime = (1 - this.fadeNode.gain.value) * this.attack\n        this.fadeNode.gain.setValueAtTime(this.fadeNode.gain.value, Pizzicato.context.currentTime)\n        this.fadeNode.gain.linearRampToValueAtTime(1, Pizzicato.context.currentTime + remainingAttackTime)\n      }\n    },\n\n\t\t/**\n\t\t * Will take the current source node and work down the volume\n\t\t * gradually in as much time as specified in the release property\n\t\t * of the sound before stopping the source node.\n\t\t */\n    stopWithRelease: {\n      enumerable: false,\n\n      value: function (callback) {\n        var node = this.sourceNode\n        var stopSound = function () {\n          return Pz.Util.isFunction(node.stop) ? node.stop(0) : node.disconnect()\n        }\n\n        var currentValue = this.fadeNode.gain.value\n        this.fadeNode.gain.cancelScheduledValues(Pz.context.currentTime)\n        this.fadeNode.gain.setValueAtTime(currentValue, Pz.context.currentTime)\n\n        if (!this.release) {\n          stopSound()\n          return\n        }\n\n        var remainingReleaseTime = this.fadeNode.gain.value * this.release\n        this.fadeNode.gain.setValueAtTime(this.fadeNode.gain.value, Pizzicato.context.currentTime)\n        this.fadeNode.gain.linearRampToValueAtTime(0.00001, Pizzicato.context.currentTime + remainingReleaseTime)\n\n        window.setTimeout(function () {\n          stopSound()\n        }, remainingReleaseTime * 1000)\n      }\n    }\n  })\n\n  Pizzicato.Group = function (sounds) {\n    sounds = sounds || []\n\n    this.mergeGainNode = Pz.context.createGain()\n    this.masterVolume = Pz.context.createGain()\n    this.sounds = []\n    this.effects = []\n    this.effectConnectors = []\n\n    this.mergeGainNode.connect(this.masterVolume)\n    this.masterVolume.connect(Pz.masterGainNode)\n\n    for (var i = 0; i < sounds.length; i++) { this.addSound(sounds[i]) }\n  }\n\n  Pizzicato.Group.prototype = Object.create(Pz.Events, {\n\n    connect: {\n      enumerable: true,\n\n      value: function (audioNode) {\n        this.masterVolume.connect(audioNode)\n        return this\n      }\n    },\n\n    disconnect: {\n      enumerable: true,\n\n      value: function (audioNode) {\n        this.masterVolume.disconnect(audioNode)\n        return this\n      }\n    },\n\n    addSound: {\n      enumerable: true,\n\n      value: function (sound) {\n        if (!Pz.Util.isSound(sound)) {\n          console.error('You can only add Pizzicato.Sound objects')\n          return\n        }\n        if (this.sounds.indexOf(sound) > -1) {\n          console.warn('The Pizzicato.Sound object was already added to this group')\n          return\n        }\n        if (sound.detached) {\n          console.warn('Groups do not support detached sounds. You can manually create an audio graph to group detached sounds together.')\n        }\n\n        sound.disconnect(Pz.masterGainNode)\n        sound.connect(this.mergeGainNode)\n        this.sounds.push(sound)\n      }\n    },\n\n    removeSound: {\n      enumerable: true,\n\n      value: function (sound) {\n        var index = this.sounds.indexOf(sound)\n\n        if (index === -1) {\n          console.warn('Cannot remove a sound that is not part of this group.')\n          return\n        }\n\n        sound.disconnect(this.mergeGainNode)\n        sound.connect(Pz.masterGainNode)\n        this.sounds.splice(index, 1)\n      }\n    },\n\n    volume: {\n      enumerable: true,\n\n      get: function () {\n        if (this.masterVolume) { return this.masterVolume.gain.value }\n      },\n\n      set: function (volume) {\n        if (Pz.Util.isInRange(volume, 0, 1)) { this.masterVolume.gain.value = volume }\n      }\n    },\n\n    play: {\n      enumerable: true,\n\n      value: function () {\n        for (var i = 0; i < this.sounds.length; i++) { this.sounds[i].play() }\n\n        this.trigger('play')\n      }\n\n    },\n\n    stop: {\n      enumerable: true,\n\n      value: function () {\n        for (var i = 0; i < this.sounds.length; i++) { this.sounds[i].stop() }\n\n        this.trigger('stop')\n      }\n\n    },\n\n    pause: {\n      enumerable: true,\n\n      value: function () {\n        for (var i = 0; i < this.sounds.length; i++) { this.sounds[i].pause() }\n\n        this.trigger('pause')\n      }\n\n    },\n\n\t\t/**\n\t\t * Similarly to Sound objects, adding effects will create a graph in which there will be a\n\t\t * gain node (effectConnector) in between every effect added. For example:\n\t\t * [fadeNode]--->[effect 1]->[connector 1]--->[effect 2]->[connector 2]--->[masterGain]\n\t\t *\n\t\t * Connectors are used to know what nodes to disconnect and not disrupt the\n\t\t * connections of another Pz.Group object using the same effect.\n\t\t */\n    addEffect: {\n      enumerable: true,\n\n      value: function (effect) {\n        if (!Pz.Util.isEffect(effect)) {\n          console.error('The object provided is not a Pizzicato effect.')\n          return this\n        }\n\n        this.effects.push(effect)\n\n\t\t\t\t// Connects effect in the last position\n        var previousNode = this.effectConnectors.length > 0 ? this.effectConnectors[this.effectConnectors.length - 1] : this.mergeGainNode\n        previousNode.disconnect()\n        previousNode.connect(effect)\n\n\t\t\t\t// Creates connector for the newly added effect\n        var gain = Pz.context.createGain()\n        this.effectConnectors.push(gain)\n        effect.connect(gain)\n        gain.connect(this.masterVolume)\n\n        return this\n      }\n    },\n\n\t\t/**\n\t\t * When removing effects, the graph in which there will be a\n\t\t * gain node (effectConnector) in between every effect should be\n\t\t * conserved. For example:\n\t\t * [fadeNode]--->[effect 1]->[connector 1]--->[effect 2]->[connector 2]--->[masterGain]\n\t\t *\n\t\t * Connectors are used to know what nodes to disconnect and not disrupt the\n\t\t * connections of another Pz.Group object using the same effect.\n\t\t */\n    removeEffect: {\n      enumerable: true,\n\n      value: function (effect) {\n        var index = this.effects.indexOf(effect)\n\n        if (index === -1) {\n          console.warn('Cannot remove effect that is not applied to this group.')\n          return this\n        }\n\n        var previousNode = (index === 0) ? this.mergeGainNode : this.effectConnectors(index - 1)\n        previousNode.disconnect()\n\n\t\t\t\t// Disconnect connector and effect\n        var effectConnector = this.effectConnectors[index]\n        effectConnector.disconnect()\n        effect.disconnect(effectConnector)\n\n\t\t\t\t// Remove connector and effect from our arrays\n        this.effectConnectors.splice(index, 1)\n        this.effects.splice(index, 1)\n\n        var targetNode\n        if (index > this.effects.length - 1 || this.effects.length === 0) { targetNode = this.masterVolume } else\t\t\t\t\t{ targetNode = this.effects[index] }\n\n        previousNode.connect(targetNode)\n\n        return this\n      }\n    }\n\n  })\n  Pizzicato.Effects = {}\n\n  var baseEffect = Object.create(null, {\n\n    connect: {\n      enumerable: true,\n\n      value: function (audioNode) {\n        this.outputNode.connect(audioNode)\n        return this\n      }\n    },\n\n    disconnect: {\n      enumerable: true,\n\n      value: function (audioNode) {\n        this.outputNode.disconnect(audioNode)\n        return this\n      }\n    }\n  })\n  Pizzicato.Effects.Delay = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      feedback: 0.5,\n      time: 0.3,\n      mix: 0.5\n    }\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.outputNode = Pizzicato.context.createGain()\n    this.dryGainNode = Pizzicato.context.createGain()\n    this.wetGainNode = Pizzicato.context.createGain()\n    this.feedbackGainNode = Pizzicato.context.createGain()\n    this.delayNode = Pizzicato.context.createDelay()\n\n\t\t// line in to dry mix\n    this.inputNode.connect(this.dryGainNode)\n\t\t// dry line out\n    this.dryGainNode.connect(this.outputNode)\n\n\t\t// feedback loop\n    this.delayNode.connect(this.feedbackGainNode)\n    this.feedbackGainNode.connect(this.delayNode)\n\n\t\t// line in to wet mix\n    this.inputNode.connect(this.delayNode)\n\t\t// wet out\n    this.delayNode.connect(this.wetGainNode)\n\n\t\t// wet line out\n    this.wetGainNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.Delay.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * Gets and sets the dry/wet mix.\n\t\t */\n    mix: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    },\n\n\t\t/**\n\t\t * Time between each delayed sound\n\t\t */\n    time: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.time\n      },\n\n      set: function (time) {\n        if (!Pz.Util.isInRange(time, 0, 180)) { return }\n\n        this.options.time = time\n        this.delayNode.delayTime.value = time\n      }\n    },\n\n\t\t/**\n\t\t * Strength of each of the echoed delayed sounds.\n\t\t */\n    feedback: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.feedback\n      },\n\n      set: function (feedback) {\n        if (!Pz.Util.isInRange(feedback, 0, 1)) { return }\n\n        this.options.feedback = parseFloat(feedback, 10)\n        this.feedbackGainNode.gain.value = this.feedback\n      }\n    }\n\n  })\n  Pizzicato.Effects.Compressor = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      threshold: -24,\n      knee: 30,\n      attack: 0.003,\n      release: 0.250,\n      ratio: 12\n    }\n\n    this.inputNode = this.compressorNode = Pizzicato.context.createDynamicsCompressor()\n    this.outputNode = Pizzicato.context.createGain()\n\n    this.compressorNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.Compressor.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * The level above which compression is applied to the audio.\n\t\t * MIN: -100\n\t\t * MAX: 0\n\t\t */\n    threshold: {\n      enumerable: true,\n\n      get: function () {\n        return this.compressorNode.threshold.value\n      },\n      set: function (value) {\n        if (Pizzicato.Util.isInRange(value, -100, 0)) { this.compressorNode.threshold.value = value }\n      }\n    },\n\n\t\t/**\n\t\t * A value representing the range above the threshold where\n\t\t * the curve smoothly transitions to the \"ratio\" portion. More info:\n\t\t * http://www.homestudiocorner.com/what-is-knee-on-a-compressor/\n\t\t * MIN 0\n\t\t * MAX 40\n\t\t */\n    knee: {\n      enumerable: true,\n\n      get: function () {\n        return this.compressorNode.knee.value\n      },\n      set: function (value) {\n        if (Pizzicato.Util.isInRange(value, 0, 40)) { this.compressorNode.knee.value = value }\n      }\n    },\n\n\t\t/**\n\t\t * How soon the compressor starts to compress the dynamics after\n\t\t * the threshold is exceeded. If volume changes are slow, you can\n\t\t * push this to a high value. Short attack times will result in a\n\t\t * fast response to sudden, loud sounds, but will make the changes\n\t\t * in volume much more obvious to listeners.\n\t\t * MIN 0\n\t\t * MAX 1\n\t\t */\n    attack: {\n      enumerable: true,\n\n      get: function () {\n        return this.compressorNode.attack.value\n      },\n      set: function (value) {\n        if (Pizzicato.Util.isInRange(value, 0, 1)) { this.compressorNode.attack.value = value }\n      }\n    },\n\n\t\t/**\n\t\t * How soon the compressor starts to release the volume level\n\t\t * back to normal after the level drops below the threshold.\n\t\t * A long time value will tend to lose quiet sounds that come\n\t\t * after loud ones, but will avoid the volume being raised too\n\t\t * much during short quiet sections like pauses in speech.\n\t\t * MIN 0\n\t\t * MAX 1\n\t\t */\n    release: {\n      enumerable: true,\n\n      get: function () {\n        return this.compressorNode.release.value\n      },\n      set: function (value) {\n        if (Pizzicato.Util.isInRange(value, 0, 1)) { this.compressorNode.release.value = value }\n      }\n    },\n\n\t\t/**\n\t\t * The amount of compression applied to the audio once it\n\t\t * passes the threshold level. The higher the Ratio the more\n\t\t * the loud parts of the audio will be compressed.\n\t\t * MIN 1\n\t\t * MAX 20\n\t\t */\n    ratio: {\n      enumerable: true,\n\n      get: function () {\n        return this.compressorNode.ratio.value\n      },\n      set: function (value) {\n        if (Pizzicato.Util.isInRange(value, 1, 20)) { this.compressorNode.ratio.value = value }\n      }\n    },\n\n    getCurrentGainReduction: function () {\n      return this.compressorNode.reduction\n    }\n\n  })\n\t/**\n\t * Frequencies below the cutoff frequency pass\n\t * through; frequencies above it are attenuated.\n\t */\n  Pizzicato.Effects.LowPassFilter = function (options) {\n    Filter.call(this, options, 'lowpass')\n  }\n\n\t/**\n\t * Frequencies below the cutoff frequency are\n\t * attenuated; frequencies above it pass through.\n\t */\n  Pizzicato.Effects.HighPassFilter = function (options) {\n    Filter.call(this, options, 'highpass')\n  }\n\n\t/**\n\t * Filters used by Pizzicato stem from the biquad filter node. This\n\t * function acts as a common constructor. The only thing that changes\n\t * between filters is the 'type' of the biquad filter node.\n\t */\n  function Filter (options, type) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      frequency: 350,\n      peak: 1\n    }\n\n    this.inputNode = this.filterNode = Pz.context.createBiquadFilter()\n    this.filterNode.type = type\n\n    this.outputNode = Pizzicato.context.createGain()\n\n    this.filterNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  var filterPrototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * The cutoff frequency of the filter.\n\t\t * MIN: 10\n\t\t * MAX: 22050 (half the sampling rate of the current context)\n\t\t */\n    frequency: {\n      enumerable: true,\n\n      get: function () {\n        return this.filterNode.frequency.value\n      },\n      set: function (value) {\n        if (Pizzicato.Util.isInRange(value, 10, 22050)) { this.filterNode.frequency.value = value }\n      }\n    },\n\n\t\t/**\n\t\t * Indicates how peaked the frequency is around\n\t\t * the cutoff. The greater the value is, the\n\t\t * greater is the peak.\n\t\t * MIN: 0.0001\n\t\t * MAX: 1000\n\t\t */\n    peak: {\n      enumerable: true,\n\n      get: function () {\n        return this.filterNode.Q.value\n      },\n      set: function (value) {\n        if (Pizzicato.Util.isInRange(value, 0.0001, 1000)) { this.filterNode.Q.value = value }\n      }\n    }\n  })\n\n  Pizzicato.Effects.LowPassFilter.prototype = filterPrototype\n  Pizzicato.Effects.HighPassFilter.prototype = filterPrototype\n  Pizzicato.Effects.Distortion = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      gain: 0.5\n    }\n\n    this.waveShaperNode = Pizzicato.context.createWaveShaper()\n    this.inputNode = this.outputNode = this.waveShaperNode\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.Distortion.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * Gets and sets the gain (amount of distortion).\n\t\t */\n    gain: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.gain\n      },\n\n      set: function (gain) {\n        if (!Pz.Util.isInRange(gain, 0, 1)) { return }\n\n        this.options.gain = gain\n        this.adjustGain()\n      }\n    },\n\n\t\t/**\n\t\t * Sets the wave curve with the correct gain. Taken from\n\t\t * http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion\n\t\t */\n    adjustGain: {\n      writable: false,\n      configurable: false,\n      enumerable: false,\n      value: function () {\n        var gain = Pz.Util.isNumber(this.options.gain) ? parseInt(this.options.gain * 100, 10) : 50\n        var n_samples = 44100\n        var curve = new Float32Array(n_samples)\n        var deg = Math.PI / 180\n        var x\n\n        for (var i = 0; i < n_samples; ++i) {\n          x = i * 2 / n_samples - 1\n          curve[i] = (3 + gain) * x * 20 * deg / (Math.PI + gain * Math.abs(x))\n        }\n\n        this.waveShaperNode.curve = curve\n      }\n    }\n\n  })\n  Pizzicato.Effects.Flanger = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      time: 0.45,\n      speed: 0.2,\n      depth: 0.1,\n      feedback: 0.1,\n      mix: 0.5\n    }\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.outputNode = Pizzicato.context.createGain()\n    this.inputFeedbackNode = Pizzicato.context.createGain()\n    this.wetGainNode = Pizzicato.context.createGain()\n    this.dryGainNode = Pizzicato.context.createGain()\n    this.delayNode = Pizzicato.context.createDelay()\n    this.oscillatorNode = Pizzicato.context.createOscillator()\n    this.gainNode = Pizzicato.context.createGain()\n    this.feedbackNode = Pizzicato.context.createGain()\n    this.oscillatorNode.type = 'sine'\n\n    this.inputNode.connect(this.inputFeedbackNode)\n    this.inputNode.connect(this.dryGainNode)\n\n    this.inputFeedbackNode.connect(this.delayNode)\n    this.inputFeedbackNode.connect(this.wetGainNode)\n\n    this.delayNode.connect(this.wetGainNode)\n    this.delayNode.connect(this.feedbackNode)\n\n    this.feedbackNode.connect(this.inputFeedbackNode)\n\n    this.oscillatorNode.connect(this.gainNode)\n    this.gainNode.connect(this.delayNode.delayTime)\n\n    this.dryGainNode.connect(this.outputNode)\n    this.wetGainNode.connect(this.outputNode)\n\n    this.oscillatorNode.start(0)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.Flanger.prototype = Object.create(baseEffect, {\n\n    time: {\n      enumberable: true,\n\n      get: function () {\n        return this.options.time\n      },\n\n      set: function (time) {\n        if (!Pz.Util.isInRange(time, 0, 1)) { return }\n\n        this.options.time = time\n        this.delayNode.delayTime.value = Pz.Util.normalize(time, 0.001, 0.02)\n      }\n    },\n\n    speed: {\n      enumberable: true,\n\n      get: function () {\n        return this.options.speed\n      },\n\n      set: function (speed) {\n        if (!Pz.Util.isInRange(speed, 0, 1)) { return }\n\n        this.options.speed = speed\n        this.oscillatorNode.frequency.value = Pz.Util.normalize(speed, 0.5, 5)\n      }\n    },\n\n    depth: {\n      enumberable: true,\n\n      get: function () {\n        return this.options.depth\n      },\n\n      set: function (depth) {\n        if (!Pz.Util.isInRange(depth, 0, 1)) { return }\n\n        this.options.depth = depth\n        this.gainNode.gain.value = Pz.Util.normalize(depth, 0.0005, 0.005)\n      }\n    },\n\n    feedback: {\n      enumberable: true,\n\n      get: function () {\n        return this.options.feedback\n      },\n\n      set: function (feedback) {\n        if (!Pz.Util.isInRange(feedback, 0, 1)) { return }\n\n        this.options.feedback = feedback\n        this.feedbackNode.gain.value = Pz.Util.normalize(feedback, 0, 0.8)\n      }\n    },\n\n    mix: {\n      enumberable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    }\n\n  })\n  Pizzicato.Effects.StereoPanner = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      pan: 0\n    }\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.outputNode = Pizzicato.context.createGain()\n\n    if (Pizzicato.context.createStereoPanner) {\n      this.pannerNode = Pizzicato.context.createStereoPanner()\n      this.inputNode.connect(this.pannerNode)\n      this.pannerNode.connect(this.outputNode)\n    } else {\n      this.inputNode.connect(this.outputNode)\n    }\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.StereoPanner.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * Pan position\n\t\t */\n    pan: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.pan\n      },\n\n      set: function (pan) {\n        if (!Pz.Util.isInRange(pan, -1, 1)) { return }\n\n        this.options.pan = pan\n        if (this.pannerNode) {\n          this.pannerNode.pan.value = pan\n        }\n      }\n    }\n\n  })\n  Pizzicato.Effects.Convolver = function (options, callback) {\n    this.options = {}\n    options = options || this.options\n\n    var self = this\n    var request = new XMLHttpRequest()\n    var defaults = {\n      mix: 0.5\n    }\n\n    this.callback = callback\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.convolverNode = Pizzicato.context.createConvolver()\n    this.outputNode = Pizzicato.context.createGain()\n\n    this.wetGainNode = Pizzicato.context.createGain()\n    this.dryGainNode = Pizzicato.context.createGain()\n\n    this.inputNode.connect(this.convolverNode)\n\n    this.convolverNode.connect(this.wetGainNode)\n    this.inputNode.connect(this.dryGainNode)\n\n    this.dryGainNode.connect(this.outputNode)\n    this.wetGainNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n\n    if (!options.impulse) {\n      console.error('No impulse file specified.')\n      return\n    }\n\n    request.open('GET', options.impulse, true)\n    request.responseType = 'arraybuffer'\n    request.onload = function (e) {\n      var audioData = e.target.response\n\n      Pizzicato.context.decodeAudioData(audioData, function (buffer) {\n        self.convolverNode.buffer = buffer\n\n        if (self.callback && Pz.Util.isFunction(self.callback)) { self.callback() }\n      }, function (error) {\n        error = error || new Error('Error decoding impulse file')\n\n        if (self.callback && Pz.Util.isFunction(self.callback)) { self.callback(error) }\n      })\n    }\n\n    request.onreadystatechange = function (event) {\n      if (request.readyState === 4 && request.status !== 200) {\n        console.error('Error while fetching ' + options.impulse + '. ' + request.statusText)\n      }\n    }\n\n    request.send()\n  }\n\n  Pizzicato.Effects.Convolver.prototype = Object.create(baseEffect, {\n\n    mix: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    }\n  })\n\t/**\n\t * Adapted from https://github.com/mmckegg/web-audio-school/blob/master/lessons/3.%20Effects/18.%20Ping%20Pong%20Delay/answer.js\n\t */\n\n  Pizzicato.Effects.PingPongDelay = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      feedback: 0.5,\n      time: 0.3,\n      mix: 0.5\n    }\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.outputNode = Pizzicato.context.createGain()\n    this.delayNodeLeft = Pizzicato.context.createDelay()\n    this.delayNodeRight = Pizzicato.context.createDelay()\n    this.dryGainNode = Pizzicato.context.createGain()\n    this.wetGainNode = Pizzicato.context.createGain()\n    this.feedbackGainNode = Pizzicato.context.createGain()\n    this.channelMerger = Pizzicato.context.createChannelMerger(2)\n\n\t\t// dry mix\n    this.inputNode.connect(this.dryGainNode)\n\t\t// dry mix out\n    this.dryGainNode.connect(this.outputNode)\n\n\t\t// the feedback loop\n    this.delayNodeLeft.connect(this.channelMerger, 0, 0)\n    this.delayNodeRight.connect(this.channelMerger, 0, 1)\n    this.delayNodeLeft.connect(this.delayNodeRight)\n    this.feedbackGainNode.connect(this.delayNodeLeft)\n    this.delayNodeRight.connect(this.feedbackGainNode)\n\n\t\t// wet mix\n    this.inputNode.connect(this.feedbackGainNode)\n\n\t\t// wet out\n    this.channelMerger.connect(this.wetGainNode)\n    this.wetGainNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.PingPongDelay.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * Gets and sets the dry/wet mix.\n\t\t */\n    mix: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    },\n\n\t\t/**\n\t\t * Time between each delayed sound\n\t\t */\n    time: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.time\n      },\n\n      set: function (time) {\n        if (!Pz.Util.isInRange(time, 0, 180)) { return }\n\n        this.options.time = time\n        this.delayNodeLeft.delayTime.value = time\n        this.delayNodeRight.delayTime.value = time\n      }\n    },\n\n\t\t/**\n\t\t * Strength of each of the echoed delayed sounds.\n\t\t */\n    feedback: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.feedback\n      },\n\n      set: function (feedback) {\n        if (!Pz.Util.isInRange(feedback, 0, 1)) { return }\n\n        this.options.feedback = parseFloat(feedback, 10)\n        this.feedbackGainNode.gain.value = this.feedback\n      }\n    }\n\n  })\n\t/**\n\t * Adapted from https://github.com/web-audio-components/simple-reverb\n\t */\n\n  Pizzicato.Effects.Reverb = function (options) {\n    var self = this\n\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      mix: 0.5,\n      time: 0.01,\n      decay: 0.01,\n      reverse: false\n    }\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.reverbNode = Pizzicato.context.createConvolver()\n    this.outputNode = Pizzicato.context.createGain()\n    this.wetGainNode = Pizzicato.context.createGain()\n    this.dryGainNode = Pizzicato.context.createGain()\n\n    this.inputNode.connect(this.reverbNode)\n    this.reverbNode.connect(this.wetGainNode)\n    this.inputNode.connect(this.dryGainNode)\n    this.dryGainNode.connect(this.outputNode)\n    this.wetGainNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n\n    (buildImpulse.bind(this))()\n  }\n\n  Pizzicato.Effects.Reverb.prototype = Object.create(baseEffect, {\n\n    mix: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    },\n\n    time: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.time\n      },\n\n      set: function (time) {\n        if (!Pz.Util.isInRange(time, 0.0001, 10)) { return }\n\n        this.options.time = time;\n        (buildImpulse.bind(this))()\n      }\n    },\n\n    decay: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.decay\n      },\n\n      set: function (decay) {\n        if (!Pz.Util.isInRange(decay, 0.0001, 10)) { return }\n\n        this.options.decay = decay;\n        (buildImpulse.bind(this))()\n      }\n\n    },\n\n    reverse: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.reverse\n      },\n\n      set: function (reverse) {\n        if (!Pz.Util.isBool(reverse)) { return }\n\n        this.options.reverse = reverse;\n        (buildImpulse.bind(this))()\n      }\n    }\n\n  })\n\n  function buildImpulse () {\n    var length = Pz.context.sampleRate * this.time\n    var impulse = Pizzicato.context.createBuffer(2, length, Pz.context.sampleRate)\n    var impulseL = impulse.getChannelData(0)\n    var impulseR = impulse.getChannelData(1)\n    var n, i\n\n    for (i = 0; i < length; i++) {\n      n = this.reverse ? length - i : i\n      impulseL[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, this.decay)\n      impulseR[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, this.decay)\n    }\n\n    this.reverbNode.buffer = impulse\n  }\n  Pizzicato.Effects.Tremolo = function (options) {\n\t\t// adapted from\n\t\t// https://github.com/mmckegg/web-audio-school/blob/master/lessons/3.%20Effects/13.%20Tremolo/answer.js\n\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      speed: 4,\n      depth: 1,\n      mix: 0.8\n    }\n\n\t\t// create nodes\n    this.inputNode = Pizzicato.context.createGain()\n    this.outputNode = Pizzicato.context.createGain()\n    this.dryGainNode = Pizzicato.context.createGain()\n    this.wetGainNode = Pizzicato.context.createGain()\n\n    this.tremoloGainNode = Pizzicato.context.createGain()\n    this.tremoloGainNode.gain.value = 0\n    this.lfoNode = Pizzicato.context.createOscillator()\n\n    this.shaperNode = Pizzicato.context.createWaveShaper()\n    this.shaperNode.curve = new Float32Array([0, 1])\n    this.shaperNode.connect(this.tremoloGainNode.gain)\n\n\t\t// dry mix\n    this.inputNode.connect(this.dryGainNode)\n    this.dryGainNode.connect(this.outputNode)\n\n\t\t// wet mix\n    this.lfoNode.connect(this.shaperNode)\n    this.lfoNode.type = 'sine'\n    this.lfoNode.start(0)\n\n    this.inputNode.connect(this.tremoloGainNode)\n    this.tremoloGainNode.connect(this.wetGainNode)\n    this.wetGainNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.Tremolo.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * Gets and sets the dry/wet mix.\n\t\t */\n    mix: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    },\n\n\t\t/**\n\t\t * Speed of the tremolo\n\t\t */\n    speed: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.speed\n      },\n\n      set: function (speed) {\n        if (!Pz.Util.isInRange(speed, 0, 20)) { return }\n\n        this.options.speed = speed\n        this.lfoNode.frequency.value = speed\n      }\n    },\n\n\t\t/**\n\t\t * Depth of the tremolo\n\t\t */\n    depth: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.depth\n      },\n\n      set: function (depth) {\n        if (!Pz.Util.isInRange(depth, 0, 1)) { return }\n\n        this.options.depth = depth\n        this.shaperNode.curve = new Float32Array([1 - depth, 1])\n      }\n    }\n\n  })\n  Pizzicato.Effects.DubDelay = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      feedback: 0.6,\n      time: 0.7,\n      mix: 0.5,\n      cutoff: 700\n    }\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.outputNode = Pizzicato.context.createGain()\n    this.dryGainNode = Pizzicato.context.createGain()\n    this.wetGainNode = Pizzicato.context.createGain()\n    this.feedbackGainNode = Pizzicato.context.createGain()\n    this.delayNode = Pizzicato.context.createDelay()\n    this.bqFilterNode = Pizzicato.context.createBiquadFilter()\n\n\t\t// dry mix\n    this.inputNode.connect(this.dryGainNode)\n    this.dryGainNode.connect(this.outputNode)\n\n\t\t// wet mix\n    this.inputNode.connect(this.wetGainNode)\n    this.inputNode.connect(this.feedbackGainNode)\n\n    this.feedbackGainNode.connect(this.bqFilterNode)\n    this.bqFilterNode.connect(this.delayNode)\n    this.delayNode.connect(this.feedbackGainNode)\n    this.delayNode.connect(this.wetGainNode)\n\n    this.wetGainNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  Pizzicato.Effects.DubDelay.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * Gets and sets the dry/wet mix.\n\t\t */\n    mix: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    },\n\n\t\t/**\n\t\t * Time between each delayed sound\n\t\t */\n    time: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.time\n      },\n\n      set: function (time) {\n        if (!Pz.Util.isInRange(time, 0, 180)) { return }\n\n        this.options.time = time\n        this.delayNode.delayTime.value = time\n      }\n    },\n\n\t\t/**\n\t\t * Strength of each of the echoed delayed sounds.\n\t\t */\n    feedback: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.feedback\n      },\n\n      set: function (feedback) {\n        if (!Pz.Util.isInRange(feedback, 0, 1)) { return }\n\n        this.options.feedback = parseFloat(feedback, 10)\n        this.feedbackGainNode.gain.value = this.feedback\n      }\n    },\n\n\t\t/**\n\t\t * Frequency on delay repeats\n\t\t */\n    cutoff: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.cutoff\n      },\n\n      set: function (cutoff) {\n        if (!Pz.Util.isInRange(cutoff, 0, 4000)) { return }\n\n        this.options.cutoff = cutoff\n        this.bqFilterNode.frequency.value = this.cutoff\n      }\n    }\n\n  })\n\t/**\n\t * See http://webaudio.prototyping.bbc.co.uk/ring-modulator/\n\t */\n  Pizzicato.Effects.RingModulator = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      speed: 30,\n      distortion: 1,\n      mix: 0.5\n    }\n\n    this.inputNode = Pizzicato.context.createGain()\n    this.outputNode = Pizzicato.context.createGain()\n    this.dryGainNode = Pizzicato.context.createGain()\n    this.wetGainNode = Pizzicato.context.createGain()\n\n\t\t/**\n\t\t * `vIn` is the modulation oscillator input\n\t\t * `vc` is the audio input.\n\t\t */\n    this.vIn = Pizzicato.context.createOscillator()\n    this.vIn.start(0)\n    this.vInGain = Pizzicato.context.createGain()\n    this.vInGain.gain.value = 0.5\n    this.vInInverter1 = Pizzicato.context.createGain()\n    this.vInInverter1.gain.value = -1\n    this.vInInverter2 = Pizzicato.context.createGain()\n    this.vInInverter2.gain.value = -1\n    this.vInDiode1 = new DiodeNode(Pizzicato.context)\n    this.vInDiode2 = new DiodeNode(Pizzicato.context)\n    this.vInInverter3 = Pizzicato.context.createGain()\n    this.vInInverter3.gain.value = -1\n    this.vcInverter1 = Pizzicato.context.createGain()\n    this.vcInverter1.gain.value = -1\n    this.vcDiode3 = new DiodeNode(Pizzicato.context)\n    this.vcDiode4 = new DiodeNode(Pizzicato.context)\n\n    this.outGain = Pizzicato.context.createGain()\n    this.outGain.gain.value = 3\n\n    this.compressor = Pizzicato.context.createDynamicsCompressor()\n    this.compressor.threshold.value = -24\n    this.compressor.ratio.value = 16\n\n\t\t// dry mix\n    this.inputNode.connect(this.dryGainNode)\n    this.dryGainNode.connect(this.outputNode)\n\n\t\t// wet mix\n    this.inputNode.connect(this.vcInverter1)\n    this.inputNode.connect(this.vcDiode4.node)\n    this.vcInverter1.connect(this.vcDiode3.node)\n    this.vIn.connect(this.vInGain)\n    this.vInGain.connect(this.vInInverter1)\n    this.vInGain.connect(this.vcInverter1)\n    this.vInGain.connect(this.vcDiode4.node)\n    this.vInInverter1.connect(this.vInInverter2)\n    this.vInInverter1.connect(this.vInDiode2.node)\n    this.vInInverter2.connect(this.vInDiode1.node)\n    this.vInDiode1.connect(this.vInInverter3)\n    this.vInDiode2.connect(this.vInInverter3)\n    this.vInInverter3.connect(this.compressor)\n    this.vcDiode3.connect(this.compressor)\n    this.vcDiode4.connect(this.compressor)\n    this.compressor.connect(this.outGain)\n    this.outGain.connect(this.wetGainNode)\n\n\t\t// line out\n    this.wetGainNode.connect(this.outputNode)\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  var DiodeNode = function (context_) {\n    this.context = context_\n    this.node = this.context.createWaveShaper()\n    this.vb = 0.2\n    this.vl = 0.4\n    this.h = 1\n    this.setCurve()\n  }\n\n  DiodeNode.prototype.setDistortion = function (distortion) {\n    this.h = distortion\n    return this.setCurve()\n  }\n\n  DiodeNode.prototype.setCurve = function () {\n    var i,\n      samples,\n      v,\n      value,\n      wsCurve,\n      _i,\n      _ref,\n      retVal\n\n    samples = 1024\n    wsCurve = new Float32Array(samples)\n\n    for (i = _i = 0, _ref = wsCurve.length; _ref >= 0 ? _i < _ref : _i > _ref; i = _ref >= 0 ? ++_i : --_i) {\n      v = (i - samples / 2) / (samples / 2)\n      v = Math.abs(v)\n      if (v <= this.vb) {\n        value = 0\n      } else if ((this.vb < v) && (v <= this.vl)) {\n        value = this.h * ((Math.pow(v - this.vb, 2)) / (2 * this.vl - 2 * this.vb))\n      } else {\n        value = this.h * v - this.h * this.vl + (this.h * ((Math.pow(this.vl - this.vb, 2)) / (2 * this.vl - 2 * this.vb)))\n      }\n      wsCurve[i] = value\n    }\n\n    retVal = this.node.curve = wsCurve\n    return retVal\n  }\n\n  DiodeNode.prototype.connect = function (destination) {\n    return this.node.connect(destination)\n  }\n\n  Pizzicato.Effects.RingModulator.prototype = Object.create(baseEffect, {\n\n\t\t/**\n\t\t * Gets and sets the dry/wet mix.\n\t\t */\n    mix: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.mix\n      },\n\n      set: function (mix) {\n        if (!Pz.Util.isInRange(mix, 0, 1)) { return }\n\n        this.options.mix = mix\n        this.dryGainNode.gain.value = Pizzicato.Util.getDryLevel(this.mix)\n        this.wetGainNode.gain.value = Pizzicato.Util.getWetLevel(this.mix)\n      }\n    },\n\n\t\t/**\n\t\t * Speed on the input oscillator\n\t\t */\n    speed: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.speed\n      },\n\n      set: function (speed) {\n        if (!Pz.Util.isInRange(speed, 0, 2000)) { return }\n\n        this.options.speed = speed\n        this.vIn.frequency.value = speed\n      }\n    },\n\n\t\t/**\n\t\t * Level of distortion\n\t\t */\n    distortion: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.distortion\n      },\n\n      set: function (distortion) {\n        if (!Pz.Util.isInRange(distortion, 0.2, 50)) { return }\n\n        this.options.distortion = parseFloat(distortion, 10)\n\n        var diodeNodes = [this.vInDiode1, this.vInDiode2, this.vcDiode3, this.vcDiode4]\n\n        for (var i = 0, l = diodeNodes.length; i < l; i++) {\n          diodeNodes[i].setDistortion(distortion)\n        }\n      }\n    }\n\n  })\n  Pizzicato.Effects.Quadrafuzz = function (options) {\n    this.options = {}\n    options = options || this.options\n\n    var defaults = {\n      lowGain: 0.6,\n      midLowGain: 0.8,\n      midHighGain: 0.5,\n      highGain: 0.6\n    }\n\n    this.inputNode = Pz.context.createGain()\n    this.outputNode = Pz.context.createGain()\n    this.dryGainNode = Pz.context.createGain()\n    this.wetGainNode = Pz.context.createGain()\n\n    this.lowpassLeft = Pz.context.createBiquadFilter()\n    this.lowpassLeft.type = 'lowpass'\n    this.lowpassLeft.frequency.value = 147\n    this.lowpassLeft.Q.value = 0.7071\n\n    this.bandpass1Left = Pz.context.createBiquadFilter()\n    this.bandpass1Left.type = 'bandpass'\n    this.bandpass1Left.frequency.value = 587\n    this.bandpass1Left.Q.value = 0.7071\n\n    this.bandpass2Left = Pz.context.createBiquadFilter()\n    this.bandpass2Left.type = 'bandpass'\n    this.bandpass2Left.frequency.value = 2490\n    this.bandpass2Left.Q.value = 0.7071\n\n    this.highpassLeft = Pz.context.createBiquadFilter()\n    this.highpassLeft.type = 'highpass'\n    this.highpassLeft.frequency.value = 4980\n    this.highpassLeft.Q.value = 0.7071\n\n    this.overdrives = []\n    for (var i = 0; i < 4; i++) {\n      this.overdrives[i] = Pz.context.createWaveShaper()\n      this.overdrives[i].curve = getDistortionCurve()\n    }\n\n    this.inputNode.connect(this.wetGainNode)\n    this.inputNode.connect(this.dryGainNode)\n    this.dryGainNode.connect(this.outputNode)\n\n    var filters = [this.lowpassLeft, this.bandpass1Left, this.bandpass2Left, this.highpassLeft]\n    for (i = 0; i < filters.length; i++) {\n      this.wetGainNode.connect(filters[i])\n      filters[i].connect(this.overdrives[i])\n      this.overdrives[i].connect(this.outputNode)\n    }\n\n    for (var key in defaults) {\n      this[key] = options[key]\n      this[key] = (this[key] === undefined || this[key] === null) ? defaults[key] : this[key]\n    }\n  }\n\n  function getDistortionCurve (gain) {\n    var sampleRate = Pz.context.sampleRate\n    var curve = new Float32Array(sampleRate)\n    var deg = Math.PI / 180\n\n    for (var i = 0; i < sampleRate; i++) {\n      var x = i * 2 / sampleRate - 1\n      curve[i] = (3 + gain) * x * 20 * deg / (Math.PI + gain * Math.abs(x))\n    }\n    return curve\n  }\n\n  Pizzicato.Effects.Quadrafuzz.prototype = Object.create(baseEffect, {\n\n    lowGain: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.lowGain\n      },\n\n      set: function (lowGain) {\n        if (!Pz.Util.isInRange(lowGain, 0, 1)) { return }\n\n        this.options.lowGain = lowGain\n        this.overdrives[0].curve = getDistortionCurve(Pz.Util.normalize(this.lowGain, 0, 150))\n      }\n    },\n\n    midLowGain: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.midLowGain\n      },\n\n      set: function (midLowGain) {\n        if (!Pz.Util.isInRange(midLowGain, 0, 1)) { return }\n\n        this.options.midLowGain = midLowGain\n        this.overdrives[1].curve = getDistortionCurve(Pz.Util.normalize(this.midLowGain, 0, 150))\n      }\n    },\n\n    midHighGain: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.midHighGain\n      },\n\n      set: function (midHighGain) {\n        if (!Pz.Util.isInRange(midHighGain, 0, 1)) { return }\n\n        this.options.midHighGain = midHighGain\n        this.overdrives[2].curve = getDistortionCurve(Pz.Util.normalize(this.midHighGain, 0, 150))\n      }\n    },\n\n    highGain: {\n      enumerable: true,\n\n      get: function () {\n        return this.options.highGain\n      },\n\n      set: function (highGain) {\n        if (!Pz.Util.isInRange(highGain, 0, 1)) { return }\n\n        this.options.highGain = highGain\n        this.overdrives[3].curve = getDistortionCurve(Pz.Util.normalize(this.highGain, 0, 150))\n      }\n    }\n  })\n\n  return Pizzicato\n})(typeof window !== 'undefined' ? window : global)\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")
  /***/ },
/* 2 */
  /***/ function (module, exports, __webpack_require__) {
    eval("/**\n * Webcomponent for creating a grid sequencer application.\n *\n * @module src/desktop.js\n * @author Lowe Marklund\n * @version 1.2\n */\n\nconst Synth = __webpack_require__(3)\nconst SequencerTemplate = __webpack_require__(4)\nconst template = SequencerTemplate.template\n\n/**\n * A grid sequencer.\n *\n * @class Sequencer\n * @extends {window.HTMLElement}\n */\n\nclass Sequencer extends window.HTMLElement {\n  /**\n   * Creates an instance of Memory .\n   * @memberof Sequencer\n   */\n  constructor () {\n    super()\n    this.attachShadow({mode: 'open'})\n    this.shadowRoot.appendChild(template.content.cloneNode(true))\n    this._sequencer = this.shadowRoot.querySelector('.sequencer')\n    this._instrumentLog = this.shadowRoot.querySelector('.instrumentLog')\n    this._inputs = this.shadowRoot.querySelector('.inputs')\n    this._grid = this.shadowRoot.querySelector('.grid')\n    this._pausePlayButton = this.shadowRoot.querySelector('.pausePlayButton')\n    this._bpmLog = this.shadowRoot.querySelector('.bpmLog')\n    this._bpmInput = this.shadowRoot.querySelector('.bpmInput')\n    this._loopLengthLog = this.shadowRoot.querySelector('.loopLengthLog')\n    this._loopLengthInput = this.shadowRoot.querySelector('.loopLengthInput')\n    this._cells = this._grid.querySelectorAll('.cell')\n    this._cellColumns = null\n    this._storedGrid = null\n    this._click = null\n    this._tempo = 150\n    this._trackSamples = {\n      '1': document.createElement('audio'),\n      '2': document.createElement('audio'),\n      '3': document.createElement('audio'),\n      '4': document.createElement('audio'),\n      '5': document.createElement('audio'),\n      '6': document.createElement('audio'),\n      '7': document.createElement('audio'),\n      '8': document.createElement('audio')\n    }\n    this._drumImages = {\n      'kicks': '/image/kicks.png',\n      'snares': '/image/snares.png',\n      'hihats': '/image/hi-hats.png',\n      'toms': '/image/toms.png',\n      'cymbals': '/image/cymbals.png',\n      'percussion': '/image/percussion.png',\n      'claps': '/image/claps.png',\n      'cowbells': '/image/cowbells.png',\n      'synths': '/image/synths.png'\n    }\n    this._trackInstrument = {\n      1: 'kicks',\n      2: 'snares',\n      3: 'hihats',\n      4: 'toms',\n      5: 'cymbals',\n      6: 'percussion',\n      7: 'claps',\n      8: 'synths'\n    }\n    this._hasFocus = false\n    this._synth = new Synth()\n    this._isPlaying = false\n  }\n  /**\n   * Watches attributes for changes on the element.\n   *\n   * @readonly\n   * @static\n   * @memberof Sequencer\n   */\n  static get observedAttributes () {\n    return ['looplength', 'currentbeat']\n  }\n\n  /**\n   * Called by the browser engine when an attribute changes.\n   *\n   * @param {string} attributeName\n   * @param {string} oldValue\n   * @param {string} newValue\n   * @memberof Sequencer\n   */\n  attributeChangedCallback (attributeName, oldValue, newValue) {\n    // re-renders grid when loop length is changed\n    if (attributeName === 'looplength' && oldValue !== null) {\n      this.storeGrid()\n      this.removeGrid()\n      this.renderGrid(this.getAttribute('instrument'))\n      this.loadStoredGrid()\n      clearInterval(this._click)\n      if (this._sequencer.getElementsByClassName('pausePlayButton')[0].getAttribute('type') === 'pause') {\n        if (Number(newValue) < Number(this.getAttribute('currentbeat'))) {\n          this.setAttribute('currentbeat', '0')\n        }\n        // syncs with other sequencers\n        this.timeSync()\n      }\n    }\n  }\n    /**\n   * Called when the element is connected to the DOM.\n   *\n   * @memberof Sequencer\n   */\n  connectedCallback () {\n    this.setAttribute('looplength', '16')\n    this.renderGrid()\n    this.inputListen()\n    this._trackSamples['1'].src = '/audio/drums/kicks/1.wav'\n    this._trackSamples['2'].src = '/audio/drums/snares/1.wav'\n    this._trackSamples['3'].src = '/audio/drums/hihats/1.wav'\n    this._trackSamples['4'].src = '/audio/drums/toms/1.wav'\n    this._trackSamples['5'].src = '/audio/drums/cymbals/1.wav'\n    this._trackSamples['6'].src = '/audio/drums/percussion/1.wav'\n    this._trackSamples['7'].src = '/audio/drums/claps/1.wav'\n  }\n\n     /**\n   * Listens after input from the user.\n   *\n   * @memberof Sequencer\n   */\n  inputListen () {\n    this._sequencer.addEventListener('mousedown', event => {\n      // activates/deactivates cell\n      if (event.target.getAttribute('class') === 'cell' && event.shiftKey === false) {\n        if (event.target.getAttribute('active') === 'false') {\n          this.cellActivate(event.target, true)\n        } else {\n          this.cellDeactivate(event.target)\n        }\n      }\n      if (event.target.getAttribute('class') === 'cell' && event.target.getAttribute('active') === 'true' && event.shiftKey === true) {\n        this.cellActivate(event.target, true, true)\n      }\n\n      // pauses and plays the sequencer(s)\n      if (event.target.getAttribute('class') === 'pausePlayButton') {\n        if (event.target.getAttribute('type') === 'play') {\n          // syncs with other sequencers\n          this.timeSync()\n          this._isPlaying = true\n        } else {\n          for (let i = 0; i < this.parentNode.parentNode.querySelectorAll('grid-sequencer').length; i++) {\n            clearInterval(this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._click)\n            this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._pausePlayButton.setAttribute('type', 'play')\n            this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._pausePlayButton.setAttribute('src', '/image/icons8-play-button-50.png')\n            this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._isPlaying = false\n          }\n        }\n      }\n        // changes sample of the track\n      if (event.target.getAttribute('class') === 'instrumentIcon') {\n        // changes drumtype\n        let currentInstrument = Number(event.target.getAttribute('type'))\n        let drumTypes = ['kicks', 'snares', 'hihats', 'toms', 'cymbals', 'percussion', 'claps', 'cowbells', 'synths']\n        let nextIcon\n\n        if (Number(event.target.getAttribute('type')) + 1 > 8) {\n          nextIcon = 0\n          event.target.setAttribute('src', this._drumImages[drumTypes[nextIcon]])\n          event.target.setAttribute('type', [`${nextIcon}`])\n          event.target.nextSibling.innerText = '1'\n          this._trackSamples[event.target.nextSibling.nextSibling.getAttribute('row')].src = `/audio/drums/${drumTypes[0]}/1.wav`\n          this._trackInstrument[event.target.nextSibling.nextSibling.getAttribute('row')] = drumTypes[nextIcon]\n        } else {\n          nextIcon = Number(event.target.getAttribute('type')) + 1\n          event.target.setAttribute('src', this._drumImages[drumTypes[nextIcon]])\n          event.target.setAttribute('type', [`${nextIcon}`])\n          event.target.nextSibling.innerText = '1'\n          this._trackSamples[event.target.nextSibling.nextSibling.getAttribute('row')].src = `/audio/drums/${drumTypes[currentInstrument + 1]}/1.wav`\n          this._trackInstrument[event.target.nextSibling.nextSibling.getAttribute('row')] = drumTypes[nextIcon]\n        }\n      }\n      if (event.target.getAttribute('class') === 'instrumentNumber') {\n        // changes sample number\n        let currentInstrument = Number(event.target.previousSibling.getAttribute('type'))\n        let instrumentTypeSampleAmount = {kicks: 26, snares: 23, hihats: 15, toms: 9, cymbals: 4, percussion: 13, claps: 6, cowbells: 1}\n        let nextSample = Number(event.target.innerText) + 1\n\n        if (nextSample > instrumentTypeSampleAmount[Object.keys(instrumentTypeSampleAmount)[currentInstrument]]) {\n          event.target.innerText = '1'\n        } else {\n          event.target.innerText = nextSample\n          this._trackSamples[event.target.nextSibling.getAttribute('row')].src = `/audio/drums/${Object.keys(instrumentTypeSampleAmount)[currentInstrument]}/${nextSample}.wav`\n        }\n      }\n\n      // clears the grid\n      if (event.target.getAttribute('class') === 'clearButton') {\n        this.clearGrid()\n      }\n    })\n\n    this._inputs.addEventListener('keydown', event => {\n      if (event.key === 'Enter') {\n            // Changes the loop length to what the user has entered\n        if (event.target.getAttribute('class') === 'loopLengthInput') {\n               // Error handling\n          if (Number(event.target.value) <= 32 && Number(event.target.value) > 0) {\n            this.setAttribute('looplength', event.target.value)\n\n            this._loopLengthLog.innerText = 'Length: ' + event.target.value\n            event.target.setAttribute('placeholder', 'Enter loop length (max = 32 min = 1)')\n            event.target.value = null\n            event.target.blur()\n          } if (Number(event.target.value) > 32 || Number(event.target.value) < 0 || isNaN(Number(event.target.value)) === true) {\n            event.target.setAttribute('placeholder', 'Value must be an integer between 1 and 32')\n            event.target.value = null\n            event.target.blur()\n          }\n        }\n            // Changes the tempo to what the user has entered\n        if (event.target.getAttribute('class') === 'bmpInput') {\n          let input = Number(event.target.value)\n            // Error handling\n          if (input <= 300 && input >= 30) {\n            for (let i = 0; i < this.parentNode.parentNode.querySelectorAll('grid-sequencer').length; i++) {\n              this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._bpmLog.innerText = 'BPM: ' + event.target.value\n            }\n            this._tempo = input\n            event.target.setAttribute('placeholder', 'Enter tempo (BPM) max = 300 min = 30')\n            event.target.value = null\n            event.target.blur()\n          }\n\n          // syncs with other sequencers\n          if (this._sequencer.getElementsByClassName('pausePlayButton')[0].getAttribute('type') === 'pause' && isNaN(input) === false) {\n            this.timeSync()\n          }\n\n          if (isNaN(input) === true || input < 30 || input >= 300) {\n            event.target.setAttribute('placeholder', 'Value must be an integer between 30 and 3')\n            event.target.value = null\n            event.target.blur()\n          }\n        }\n      }\n    })\n  }\n    /**\n   * Renders grid of the sequencer\n   *\n   * @memberof Sequencer\n   */\n  renderGrid () {\n    let column = 0\n    let row = 1\n    let loopLength = Number(this.getAttribute('looplength'))\n    let maxRows = 8\n\n    for (let i = 0; i < loopLength * 9; i++) {\n      if (i === 0) {\n        let instrumentType = document.createElement('img')\n        let instrumentNumber = document.createElement('h6')\n        instrumentType.setAttribute('src', this._drumImages[this._trackInstrument[row]])\n        instrumentType.setAttribute('type', `${row - 1}`)\n        instrumentType.setAttribute('class', 'instrumentIcon')\n        instrumentNumber.setAttribute('class', 'instrumentNumber')\n        instrumentNumber.innerText = '1'\n        this._grid.appendChild(instrumentType)\n        this._grid.appendChild(instrumentNumber)\n      }\n\n      let cell = document.createElement('img')\n      column += 1\n      cell.setAttribute('active', `false`)\n      cell.setAttribute('id', `${i}`)\n      cell.setAttribute('class', `cell`)\n      cell.setAttribute('column', `${column}`)\n      cell.setAttribute('row', `${row}`)\n      cell.setAttribute('note', 'C')\n      cell.setAttribute('octave', '3')\n      cell.setAttribute('noteLength', '100')\n      cell.setAttribute('notemenuopen', 'false')\n      cell.setAttribute('chosen', 'false')\n      this._grid.appendChild(cell)\n\n      if (column === loopLength) {\n        let rowBreak = document.createElement('br')\n        let instrumentType = document.createElement('img')\n        let instrumentNumber = document.createElement('h6')\n        instrumentType.setAttribute('src', this._drumImages[this._trackInstrument[row + 1]])\n        instrumentType.setAttribute('type', `${row}`)\n        instrumentType.setAttribute('class', 'instrumentIcon')\n        instrumentNumber.setAttribute('class', 'instrumentNumber')\n        instrumentNumber.innerText = '1'\n        this._grid.appendChild(rowBreak)\n        this._grid.appendChild(instrumentType)\n        this._grid.appendChild(instrumentNumber)\n\n        column = 0\n        row += 1\n      }\n\n      if (row > maxRows) {\n        this._cells = this._grid.querySelectorAll('.cell')\n        this._grid.removeChild(this._grid.querySelectorAll('.instrumentIcon')[(this._grid.querySelectorAll('.instrumentIcon').length) - 1])\n        this._grid.removeChild(this._grid.querySelectorAll('.instrumentNumber')[(this._grid.querySelectorAll('.instrumentNumber').length) - 1])\n        this._cellColumns = column\n        if (loopLength > 16) {\n          this._sequencer.style.width = `${loopLength * 31}px`\n        } else {\n          this._sequencer.style.width = '500px'\n        }\n        return this._grid\n      }\n    }\n  }\n     /**\n   * Removes grid of the sequencer\n   *\n   * @memberof Sequencer\n   */\n  removeGrid () {\n    let gridLength = this._grid.children.length\n    for (let i = 0; i < gridLength; i++) {\n      this._grid.removeChild(this._grid.firstElementChild)\n    }\n  }\n   /**\n   * Deactivates all cells of the sequencer\n   *\n   * @memberof Sequencer\n   */\n  clearGrid () {\n    let gridLength = this._cells.length\n\n    for (let i = 0; i < gridLength; i++) {\n      this.cellDeactivate(this._cells[i])\n      if (this._pausePlayButton.getAttribute('type') === 'pause') {\n        for (let i = 0; i < this.parentNode.parentNode.querySelectorAll('grid-sequencer').length; i++) {\n          clearInterval(this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._click)\n          this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i].playGrid()\n        }\n      }\n    }\n  }\n    /**\n   * Stores a map of the sequencers activated cells\n   *\n   * @memberof Sequencer\n   */\n  storeGrid () {\n    let grid = {}\n\n    for (let i = 1; i <= 8; i++) {\n      grid[i] = []\n    }\n\n    for (let i = 0; i < this._cells.length; i++) {\n      if (this._cells[i].getAttribute('active') === 'true') {\n        grid[Number(this._cells[i].getAttribute('row'))].push(this._cells[i].getAttribute('column'))\n      }\n    }\n    this._storedGrid = grid\n  }\n   /**\n   * Loads a map of activated cells into the sequencer\n   *\n   * @memberof Sequencer\n   */\n  loadStoredGrid () {\n    for (let i = 0; i < this._cells.length; i++) {\n      if (this._cells[i].getAttribute('column') === this.getAttribute('currentbeat') && this._cells[i].getAttribute('chosen') === 'false') {\n        this._cells[i].style.backgroundColor = 'red'\n      }\n\n      for (let i2 = 0; i2 < this._storedGrid[Number(this._cells[i].getAttribute('row'))].length; i2++) {\n        if (this._storedGrid[Number(this._cells[i].getAttribute('row'))][i2] === this._cells[i].getAttribute('column')) {\n          this.cellActivate(this._cells[i])\n        }\n      }\n    }\n  }\n   /**\n   * Plays the sequencer\n   *\n   * @param {string} beat - The grid column to start playing at\n   * @param {number} tempo - The tempo to play at\n   * @return {function} - An interval creating each beat of the sequencer\n   * @memberof Sequencer\n   */\n  playGrid (beat = this.getAttribute('currentbeat'), tempo = this._tempo) {\n    let column = Number(beat)\n    let cells = this._grid.querySelectorAll('.cell')\n\n    let click = setInterval(() => {\n      for (let i = 0; i < cells.length; i += 1) {\n        if (Number(cells[i].getAttribute('column')) === column) {\n          if (this._cells[i].getAttribute('chosen') === 'false') {\n            cells[i].style.backgroundColor = 'red'\n          }\n\n          this.setAttribute('currentbeat', column)\n\n          if (i > 0 && cells[i - 1].getAttribute('active') === 'false') {\n            this.cellDeactivate(cells[i - 1])\n          }\n          if (cells[i].getAttribute('active') === 'true') {\n            if (this._trackInstrument[cells[i].getAttribute('row')] === 'synths') {\n              let note = cells[i].getAttribute('note')\n              let octave = Number(cells[i].getAttribute('octave'))\n              let frequency = this._synth._noteFreq[octave][note]\n              let key = this._synth.createKey(note, octave, frequency, note + `${octave}`)\n              this._synth.notePressed(key, note + `${octave}`, cells[i])\n            }\n\n            this._trackSamples[cells[i].getAttribute('row')].pause()\n            this._trackSamples[cells[i].getAttribute('row')].currentTime = 0\n            let playPromise = this._trackSamples[cells[i].getAttribute('row')].play()\n            playPromise.then(_ => {\n\n            }).catch(error => {\n\n            })\n          } else {\n            this.cellDeactivate(cells[(cells.length) - 1])\n          }\n        }\n        if (cells[i].getAttribute('active') === 'true' && cells[i].getAttribute('chosen') === 'false') {\n          this.cellActivate(cells[i], false)\n        }\n      }\n\n      if (column >= Number(this.getAttribute('looplength'))) {\n        column = 1\n      } else {\n        column += 1\n      }\n    }, (60000 / tempo) / 4)\n\n    this._click = click\n  }\n  /**\n   * Syncs all the sequencers open on the desktop to start/stop at the same time\n   *\n   * @memberof Sequencer\n   */\n  timeSync () {\n    for (let i = 0; i < this.parentNode.parentNode.querySelectorAll('grid-sequencer').length; i++) {\n      clearInterval(this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._click)\n      let currentBeat = this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i].getAttribute('currentbeat')\n      this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i].playGrid(currentBeat, this._tempo)\n      this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._bpmLog.innerText = `BPM: ${this._tempo}`\n      if (this._pausePlayButton.getAttribute('type') === 'play') {\n        this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._pausePlayButton.setAttribute('type', 'pause')\n        this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._pausePlayButton.setAttribute('src', '/image/icons8-pause-button-50.png')\n      } else {\n        this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._pausePlayButton.setAttribute('type', 'pause')\n        this.parentNode.parentNode.querySelectorAll('grid-sequencer')[i]._pausePlayButton.setAttribute('src', '/image/icons8-pause-button-50.png')\n      }\n    }\n  }\n  /**\n   * Activates a cell in the grid\n   *\n   * @memberof Sequencer\n   */\n  cellDeactivate (cell) {\n    cell.setAttribute('active', 'false')\n    cell.style.backgroundColor = 'white'\n  }\n  /**\n   * Deactivates a cell in the grid\n   *\n   * @memberof Sequencer\n   */\n  cellActivate (cell, cellClicked, shiftClick) {\n    cell.setAttribute('active', 'true')\n    cell.style.backgroundColor = 'yellow'\n\n    if (cellClicked === true) {\n      cell.style.backgroundColor = 'green'\n      cell.setAttribute('chosen', 'true')\n      this._grid.querySelectorAll('.cell').forEach(c => {\n        if (c.getAttribute('active') === 'true' && c !== cell) {\n          this.cellActivate(c, false)\n        }\n      })\n    }\n\n    if (this._trackInstrument[cell.getAttribute('row')] === 'synths' && cellClicked === true) {\n      if (this.shadowRoot.querySelectorAll('.changeNoteMenu')[0]) {\n        this.shadowRoot.querySelectorAll('.changeNoteMenu')[0].setAttribute('assignedCell', cell.id)\n        this.shadowRoot.querySelectorAll('.noteSelectionMenu')[0].children[1].value = cell.getAttribute('note')\n        this.shadowRoot.querySelectorAll('.octaveSelectionMenu')[0].children[1].value = cell.getAttribute('octave')\n        this.shadowRoot.querySelectorAll('.noteLengthInput')[0].children[1].value = cell.getAttribute('noteLength')\n        cell.style.border = 'green'\n      } else {\n        this.changeCellNote(cell)\n      }\n    } if (this.shadowRoot.querySelectorAll('.changeNoteMenu')[0] && this._trackInstrument[cell.getAttribute('row')] !== 'synths' && cellClicked === true) {\n      this._grid.removeChild(this.shadowRoot.querySelectorAll('.changeNoteMenu')[0])\n    }\n  }\n\n  changeCellNote (cell) {\n    let changeNoteMenu = document.createElement('div')\n    let noteSelectionMenu = document.createElement('div')\n    let octaveSelectionMenu = document.createElement('div')\n    let noteLengthInput = document.createElement('div')\n    let closeButton = document.createElement('div')\n\n    changeNoteMenu.setAttribute('class', 'changeNoteMenu')\n    noteSelectionMenu.setAttribute('class', 'noteSelectionMenu')\n    octaveSelectionMenu.setAttribute('class', 'octaveSelectionMenu')\n    noteLengthInput.setAttribute('class', 'noteLengthInput')\n\n    noteSelectionMenu.innerHTML =\n    `<span>Note: </span>\n    <select name=\"note\">\n      <option value=\"C\" selected>C</option>\n      <option value=\"C#\">C#</option>\n      <option value=\"D\">D</option>\n      <option value=\"D#\">D#</option>\n      <option value=\"E\">E</option>\n      <option value=\"F\">F</option>\n      <option value=\"F#\">F#</option>\n      <option value=\"G\">G</option>\n      <option value=\"G#\">G#</option>\n      <option value=\"A\">A</option>\n      <option value=\"A#\">A#</option>\n      <option value=\"B\">B</option>\n    </select>`\n    octaveSelectionMenu.innerHTML =\n    `<span>Octave: </span>\n    <select name=\"octave\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\" selected>3</option>\n      <option value=\"4\">4</option>\n      <option value=\"5\">5</option>\n      <option value=\"6\">6</option>\n      <option value=\"7\">7</option>\n    </select>`\n\n    noteLengthInput.innerHTML =\n    `<span>NoteLength: </span>\n    <input type=\"range\" min=\"0\" max=\"1000\" step=\"10\"\n        value=\"200\" list=\"noteLengths\" name=\"noteLength\">\n    <datalist id=\"noteLength\">\n      <option value=\"0.0\" label=\"Mute\">\n      <option value=\"1.0\" label=\"100%\">\n    </datalist>`\n\n    changeNoteMenu.setAttribute('assignedcell', cell.id)\n\n    closeButton.innerText = 'x'\n\n    if (cell.getAttribute('notemenuopen') === 'false') {\n      changeNoteMenu.appendChild(noteSelectionMenu)\n      changeNoteMenu.appendChild(octaveSelectionMenu)\n      changeNoteMenu.appendChild(noteLengthInput)\n      changeNoteMenu.appendChild(closeButton)\n\n      cell.parentNode.appendChild(changeNoteMenu)\n      cell.setAttribute('notemenuopen', 'true')\n    }\n\n    let changeNoteElement = this.shadowRoot.querySelector(\"select[name='note']\")\n    let changeOctaveElement = this.shadowRoot.querySelector(\"select[name='octave']\")\n    let changeNoteLengthElement = this.shadowRoot.querySelector(\"input[name='noteLength']\")\n\n    if (cell.getAttribute('note') && cell.getAttribute('octave') && cell.getAttribute('noteLength') && this._grid.querySelectorAll('.changeNoteMenu')[0]) {\n      changeNoteElement.value = cell.getAttribute('note')\n      changeOctaveElement.value = cell.getAttribute('octave')\n      changeNoteLengthElement.value = cell.getAttribute('noteLength')\n    }\n\n    changeNoteMenu.onchange = () => {\n      let cells = this._grid.querySelectorAll('.cell')\n      cells.forEach(c => {\n        if (c.id === changeNoteMenu.getAttribute('assignedcell')) {\n          c.setAttribute('note', `${changeNoteElement.value}`)\n          c.setAttribute('octave', `${changeOctaveElement.value}`)\n          c.setAttribute('noteLength', `${changeNoteLengthElement.value}`)\n        }\n      })\n    }\n\n    closeButton.onclick = (event) => {\n      for (let i = 0; i < event.target.parentNode.children.length;) {\n        event.target.parentNode.removeChild(event.target.parentNode.children[i])\n      }\n    }\n  }\n}\n\nwindow.customElements.define('grid-sequencer', Sequencer)\n\nmodule.exports = Sequencer\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")
  /***/ },
/* 3 */
  /***/ function (module, exports, __webpack_require__) {
    'use strict'
    eval("/**\n * Webcomponent for creating a synth application.\n *\n * @module src/synth.js\n * @author Lowe Marklund\n * @version 1.0\n */\n\n \n\n const SynthTemplate = __webpack_require__(5)\n const Pizzicato = __webpack_require__(1)\n const template = SynthTemplate.template\n\n/**\n * Synth.\n *\n * @class Synth\n * @extends {window.HTMLElement}\n */\n\n class Synth extends window.HTMLElement {\n  /**\n   * Creates an instance of Memory .\n   * @memberof Synth\n   */\n   constructor () {\n     super()\n     this.attachShadow({mode: 'open'})\n     this.shadowRoot.appendChild(template.content.cloneNode(true))\n     this._synth = this.shadowRoot.querySelector('.synth')\n     this._keyboard = this.shadowRoot.querySelector('.keyboard')\n     this._newKeyboard = this.shadowRoot.querySelector('.newKeyboard')\n     this._carrierWavePicker = this.shadowRoot.querySelector(\"select[name='waveform']\")\n     this._modulatorWavePicker = this.shadowRoot.querySelector(\"select[name='waveform2']\")\n     this._modulator2WavePicker = this.shadowRoot.querySelector(\"select[name='waveform3']\")\n     this._octavePicker = this.shadowRoot.querySelector(\"select[name='octave']\")\n     this._volumeControl = this.shadowRoot.querySelector(\"input[name='volume']\")\n     this._carrierGainControl = this.shadowRoot.querySelector(\"input[name='carrierGain']\")\n     this._modulationFreqControl = this.shadowRoot.querySelector(\"input[name='modulationFreq']\")\n     this._modulationDepthControl = this.shadowRoot.querySelector(\"input[name='modulationDepth']\")\n     this._modulation2FreqControl = this.shadowRoot.querySelector(\"input[name='modulation2Freq']\")\n     this._modulation2DepthControl = this.shadowRoot.querySelector(\"input[name='modulation2Depth']\")\n     this._flangerControl = this.shadowRoot.querySelector('#flanger')\n     this._tremoloControl = this.shadowRoot.querySelector('#tremolo')\n     this._reverbControl = this.shadowRoot.querySelector('#reverb')\n     this._lfoFrequency = this.shadowRoot.querySelector(\"input[name='lfoFreq']\")\n     this._audioContext = Pizzicato.context\n     this._out = this._audioContext.destination\n     this._effectsGainNode = this._audioContext.createGain()\n     this._oscList = {}\n     this._activeNotes = {\n       1: null,\n       2: null,\n       3: null,\n       4: null,\n       5: null,\n       6: null,\n       7: null,\n       8: null\n     }\n     this._triggerKeys = ['Tab', '1', 'q', '2', 'w', 'e', '4', 'r', '5', 't', '6', 'y', 'u', '8', 'i', '9', 'o', 'p', '0', 'å', '´', '¨', '\\u27f5', '\\u21b5']\n   }\n\n  /**\n   * Watches attributes for changes on the element.\n   *\n   * @readonly\n   * @static\n   * @memberof Synth\n   */\n   static get observedAttributes () {\n\n   }\n\n  /**\n   * Called by the browser engine when an attribute changes.\n   *\n   * @param {string} attributeName\n   * @param {string} oldValue\n   * @param {string} newValue\n   * @memberof Synth\n   */\n   attributeChangedCallback (attributeName, oldValue, newValue) {\n\n   }\n    /**\n   * Called when the element is connected to the DOM.\n   *\n   * @memberof Synth\n   */\n   connectedCallback () {\n     this.setup()\n     this.inputListen()\n   }\n\n     /**\n   * Listens after input from the user.\n   *\n   * @memberof Synth\n   */\n   inputListen () {\n     this._octavePicker.addEventListener('change', () => {\n       let keyboardOctaves = this._keyboard.querySelectorAll('.octave')\n\n        // removes previous keyboard octaves\n       keyboardOctaves.forEach(octave => {\n         this._keyboard.removeChild(octave)\n       })\n\n       this._noteFreq = this.createNoteTable(1)\n       this.createKeyboard(Number(this._octavePicker.value))\n     }, false)\n\n     this._volumeControl.addEventListener('change', () => {\n       this.changeVolume()\n     }, false)\n\n    //  this._lfoFrequency.addEventListener('change', () => {\n    //    this.changeLfoFreq()\n    //  })\n\n     this._flangerControl.onchange = (event) => {\n       this._flanger.options[event.target.name] = Number(event.target.value)\n       this.effectsRouting(false)\n     }\n\n     this._tremoloControl.onchange = (event) => {\n       this._tremolo.options[event.target.name] = Number(event.target.value)\n       this.effectsRouting(false)\n     }\n\n     this._reverbControl.onchange = (event) => {\n       this._reverb.options[event.target.name] = Number(event.target.value)\n       console.log(this._reverb)\n       this.effectsRouting(false)\n     }\n\n     window.addEventListener('keydown', event => {\n       if (document.activeElement !== this._sequencer) {\n         event.preventDefault()\n         let triggeredKey = event.key\n         switch (event.code) {\n           case 'BracketRight':\n             triggeredKey = '¨'\n             break\n           case 'Enter':\n             triggeredKey = '\\u21b5'\n             break\n           case 'Backspace':\n             triggeredKey = '\\u27f5'\n             break\n           case 'Equal':\n             triggeredKey = '´'\n             break\n         }\n         if (event.repeat === false && this._triggerKeys.includes(triggeredKey)) {\n           let key = this._keyboard.querySelector(`#key${triggeredKey}`)\n           this.notePressed(key, triggeredKey)\n           key.style.backgroundColor = '#599'\n         }\n       }\n     })\n\n     window.addEventListener('keyup', event => {\n       let triggeredKey = event.key\n\n       switch (event.code) {\n         case 'BracketRight':\n           triggeredKey = '¨'\n           break\n         case 'Enter':\n           triggeredKey = '\\u21b5'\n           break\n         case 'Backspace':\n           triggeredKey = '\\u27f5'\n           break\n         case 'Equal':\n           triggeredKey = '´'\n           break\n       }\n       if (this._triggerKeys.includes(triggeredKey)) {\n         let key = this._keyboard.querySelector(`#key${triggeredKey}`)\n         this.noteReleased(key, triggeredKey)\n         key.style.backgroundColor = 'white'\n\n         if (key.getAttribute('class') === 'sharpKey') {\n           key.style.backgroundColor = 'black'\n         }\n       }\n     }, false)\n   }\n\n      /**\n   * Creates array of pitches\n   *\n   * @memberof Synth\n   */\n   createNoteTable (octave) {\n     let noteFreq = []\n\n     for (let i = 0; i < 8; i++) {\n       noteFreq[octave + i] = []\n     }\n\n     noteFreq[octave]['C'] = 32.703195662574829\n     noteFreq[octave]['C#'] = 34.647828872109012\n     noteFreq[octave]['D'] = 36.708095989675945\n     noteFreq[octave]['D#'] = 38.890872965260113\n     noteFreq[octave]['E'] = 41.203444614108741\n     noteFreq[octave]['F'] = 43.653528929125485\n     noteFreq[octave]['F#'] = 46.249302838954299\n     noteFreq[octave]['G'] = 48.999429497718661\n     noteFreq[octave]['G#'] = 51.913087197493142\n     noteFreq[octave]['A'] = 55.000000000000000\n     noteFreq[octave]['A#'] = 58.270470189761239\n     noteFreq[octave]['B'] = 61.735412657015513\n\n     for (var pitch in noteFreq[octave]) {\n       for (let i = 2; i < 8; i++) {\n         noteFreq[i][pitch] = noteFreq[i - 1][pitch] * 2\n       }\n     }\n\n     this._noteFreq = noteFreq\n     return noteFreq\n   }\n\n   createKeyboard (octave) {\n     let keyIndex = 0\n\n     this._noteFreq.forEach((keys, i1) => {\n       if (i1 <= octave + 1 && i1 >= octave) {\n         let keyList = Object.entries(keys)\n         let whiteKeys = document.createElement('div')\n         let blackKeys = document.createElement('div')\n         let octaveElem = document.createElement('div')\n         octaveElem.className = 'octave'\n\n         keyList.forEach((key, i2) => {\n           if (key[0].length > 1) {\n             blackKeys.appendChild(this.createKey(key[0], i1, key[1], keyIndex))\n           } else {\n             whiteKeys.appendChild(this.createKey(key[0], i1, key[1], keyIndex))\n           }\n\n           keyIndex++\n         })\n\n         octaveElem.appendChild(blackKeys)\n         octaveElem.appendChild(whiteKeys)\n         this._keyboard.appendChild(octaveElem)\n       }\n     })\n   }\n\n   setup () {\n     this._noteFreq = this.createNoteTable(1)\n     this._masterGainNode = this._audioContext.createGain()\n     this._masterGainNode.connect(this._out)\n     this._masterGainNode.gain.value = this._volumeControl.value\n     this._noteLength = 500\n\n     this.createKeyboard(3)\n\n     this._sineTerms = new Float32Array([0, 0, 1, 0, 1])\n     this._cosineTerms = new Float32Array(this._sineTerms.length)\n     this._customWaveform = this._audioContext.createPeriodicWave(this._cosineTerms, this._sineTerms)\n\n     this.effectsRouting(true)\n   }\n\n   createKey (note, octave, freq, keyIndex) {\n     let keyElement = document.createElement('div')\n     let labelElement = document.createElement('div')\n\n     keyElement.className = 'key'\n     keyElement.id = `key${this._triggerKeys[keyIndex]}`\n     keyElement.dataset['octave'] = octave\n     keyElement.dataset['note'] = note\n     keyElement.dataset['frequency'] = freq\n\n     if (note.length > 1) {\n       keyElement.setAttribute('class', 'sharpKey')\n     }\n\n     labelElement.innerHTML = this._triggerKeys[keyIndex]\n\n     keyElement.appendChild(labelElement)\n\n     keyElement.addEventListener('mousedown', event => {\n       this.notePressed(keyElement)\n     }, false)\n     keyElement.addEventListener('mouseup', event => {\n       this.noteReleased(keyElement)\n     }, false)\n     keyElement.addEventListener('mouseover', event => {\n       this.noteReleased(keyElement)\n     }, false)\n     keyElement.addEventListener('mouseleave', event => {\n       this.noteReleased(keyElement)\n     }, false)\n\n     return keyElement\n   }\n\n   playTone (freq) {\n     let carrier = this._audioContext.createOscillator()\n     let modulator = this._audioContext.createOscillator()\n     let modulator2 = this._audioContext.createOscillator()\n     let carrierGain = this._audioContext.createGain()\n     let modulatorGain = this._audioContext.createGain()\n     let modulator2Gain = this._audioContext.createGain()\n\n     carrierGain.gain.value = this._carrierGainControl.value\n     modulatorGain.gain.value = this._modulationDepthControl.value\n     modulator.frequency.value = this._modulationFreqControl.value\n     modulator2Gain.gain.value = this._modulation2DepthControl.value\n     modulator2.frequency.value = this._modulation2FreqControl.value\n\n      // frequency modulation routing\n     carrier.connect(carrierGain)\n     carrier.connect(this._effectsGainNode)\n     carrierGain.connect(modulator.frequency)\n     modulator.connect(modulatorGain)\n     modulatorGain.connect(this._effectsGainNode)\n     carrierGain.connect(modulator2.frequency)\n     modulator2.connect(modulator2Gain)\n     modulator2Gain.connect(this._effectsGainNode)\n\n     let type = this._carrierWavePicker.options[this._carrierWavePicker.selectedIndex].value\n     let type2 = this._modulatorWavePicker.options[this._modulatorWavePicker.selectedIndex].value\n     let type3 = this._modulator2WavePicker.options[this._modulator2WavePicker.selectedIndex].value\n\n     if (type === 'custom') {\n       carrier.setPeriodicWave(this._customWaveform)\n     } else {\n       carrier.type = type\n       modulator.type = type2\n       modulator2.type = type3\n     }\n\n     carrier.frequency.value = freq\n\n     carrier.start()\n     modulator.start()\n     modulator2.start()\n\n     return [carrier, modulator, modulator2]\n   }\n\n   notePressed (keyElement, id, cell) {\n     let dataset = keyElement.dataset\n\n     if (!dataset['pressed']) {\n       if (cell) {\n         let cellId = cell.getAttribute('row') + cell.getAttribute('column')\n         let row = Number(cellId[0])\n\n         if (this._activeNotes[row] !== null) {\n           this.noteReleased(this._activeNotes[row].keyElement, this._activeNotes[row].id, this._activeNotes[row].cellId)\n         }\n\n         this._activeNotes[row] = {\n           keyElement: keyElement,\n           id: id,\n           cellId: cellId\n         }\n\n         this._oscList[cellId] = this.playTone(dataset['frequency'])\n\n         this._noteLength = Number(cell.getAttribute('noteLength'))\n\n         setTimeout(() => {\n           this.noteReleased(keyElement, id, cellId)\n         }, this._noteLength)\n       } else {\n         this._oscList[id] = this.playTone(dataset['frequency'])\n       }\n\n       dataset['pressed'] = 'yes'\n     }\n   }\n\n   noteReleased (keyElement, id, cellId) {\n     let dataset = keyElement.dataset\n\n     if (dataset && dataset['pressed']) {\n       if (cellId) {\n         this._oscList[cellId].forEach(osc => {\n           osc.stop()\n         })\n         delete this._oscList[cellId]\n       } else {\n         this._oscList[id].forEach(osc => {\n           osc.stop()\n         })\n         delete this._oscList[id]\n       }\n       delete dataset['pressed']\n     }\n   }\n\n   changeVolume () {\n     this._masterGainNode.gain.value = this._volumeControl.value\n   }\n\n   changeLfoFreq () {\n\n   }\n\n   effectsRouting (defaultSettings) {\n     let effectOptionObj\n     let oldReverb\n     let oldFlanger\n     let oldTremolo\n     let oldDelay\n     let oldRingModulator\n\n     if (this._analyser) {\n       oldReverb = this._reverb\n       oldFlanger = this._flanger\n       oldTremolo = this._tremolo\n       oldDelay = this._delay\n       oldRingModulator = this._delay\n     }\n\n     if (defaultSettings === false) {\n       effectOptionObj = {\n         flanger: this._flanger.options,\n         delay: this._delay.options,\n         reverb: this._reverb.options,\n         tremolo: this._tremolo.options,\n         ringmodulator: this._ringModulator.options\n       }\n     }\n     if (defaultSettings === true) {\n       effectOptionObj = {\n         delay: {\n           feedback: 0,\n           time: 0,\n           mix: 0\n         },\n         flanger: {\n           time: 0,\n           speed: 0,\n           depth: 0,\n           feedback: 0,\n           mix: 0\n         },\n         reverb: {\n           time: 0,\n           decay: 0,\n           reverse: false,\n           mix: 0\n         },\n         tremolo: {\n           speed: 0,\n           depth: 0,\n           mix: 0\n         },\n         ringmodulator:\n         {\n           speed: 0,\n           distortion: 0,\n           mix: 0\n         }\n       }\n     }\n\n     this._effectsGainNode.gain.value = 1\n\n     this._analyser = this._audioContext.createAnalyser()\n\n     this._delay = new Pizzicato.Effects.Delay(effectOptionObj.delay)\n\n     this._flanger = new Pizzicato.Effects.Flanger(effectOptionObj.flanger)\n\n     this._reverb = new Pizzicato.Effects.Reverb(effectOptionObj.reverb)\n\n     this._tremolo = new Pizzicato.Effects.Tremolo(effectOptionObj.tremolo)\n\n     this._lowPassFilter = new Pizzicato.Effects.LowPassFilter({\n       frequency: 0,\n       peak: 0\n     })\n\n     this._highPassFilter = new Pizzicato.Effects.HighPassFilter({\n       frequency: 0,\n       peak: 0\n     })\n\n     this._ringModulator = new Pizzicato.Effects.RingModulator(effectOptionObj.ringmodulator)\n\n     this._effectsGainNode.connect(this._flanger)\n     this._flanger.connect(this._tremolo)\n     this._tremolo.connect(this._ringModulator)\n     this._ringModulator.connect(this._delay)\n   // this._lowPassFilter.connect(this._highPassFilter)\n   // this._highPassFilter.connect(this._delay)\n     this._delay.connect(this._reverb)\n     this._reverb.connect(this._analyser)\n     this._analyser.connect(this._masterGainNode)\n\n     if (oldReverb !== undefined) {\n       oldReverb.disconnect()\n       oldFlanger.disconnect()\n       oldDelay.disconnect()\n       oldRingModulator.disconnect()\n       oldTremolo.disconnect()\n     }\n   }\n}\n\n window.customElements.define('synth-element', Synth)\n\n module.exports = Synth\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")
  /***/ },
/* 4 */
  /***/ function (module, exports) {
    eval("const template = document.createElement('template')\n\ntemplate.innerHTML =\n\n`<div class=\"sequencer\">\n    <div class=\"logs\">\n        <div class=\"bpmLog\">BPM: 150</div>\n        <div class=\"loopLengthLog\">Length: 16 </div>\n    </div>\n    <div class=\"inputs\">\n        <input class=\"bmpInput\" placeholder=\"Enter tempo (BPM) max = 300 min = 30\"></input>\n        <input class=\"loopLengthInput\" placeholder=\"Enter loop length (max = 32 min = 1)\"></input>\n    </div>\n    <div class=\"grid\"></div>\n    <img class=\"pausePlayButton\" type=\"play\" src=\"/image/icons8-play-button-50.png\" alt=\"pause/play icon\">\n    <div class=\"info\">Click icons and numbers to change track sound</div>\n    <button class=\"clearButton\">Clear Grid</button>\n    <style>\n        .sequencer {\n            margin-left: 30px;\n            margin-right: 20px;\n            width: 500;\n            font-family: avenir;\n            text-align: center;\n            user-drag: none; \n            user-select: none;\n            -moz-user-select: none;\n            -khtml-user-select: none;\n            -webkit-user-select: none;\n            -o-user-select: none;\n        }\n        .instrumentLog {\n            text-align: center;\n            font-size: 30px;\n            margin: 10px;\n            font-family: avenir;\n        }\n        .logs {\n            text-align: center;\n            margin-right: 5px;\n            width: auto;\n        }\n\n        .logs div {\n            display: inline-block;\n            text-align: center;\n            margin-left: 70px;\n            margin-right: 70px;\n        }\n\n        .info {\n            font-size: 10px;\n            margin: 10px;\n        }\n\n        }\n        .inputs {\n            float: center;\n        }\n\n        .inputs input{\n            text-align: center;\n            margin: 10px;\n            margin-left: 9px;\n            margin-right: 9px;\n            margin-top: 5px;\n            font-size: 8px;\n            width: 200px;\n        }\n\n        .grid {\n            text-align: center;  \n        }\n\n        .cell {\n            height: 15px;\n            width: 15px;\n            position: relative;\n            box-shadow: 1px 1px 5px rgba(0, 0, 0, .5);\n            padding: 5px;\n            margin: 1px;\n            border-radius: 3px;\n            background: white;\n        }\n\n        .instrumentIcon{\n            height: 15px;\n            width: 15px;\n            position: relative;\n            padding: 5px;\n            margin-left: -42px;\n            margin-bottom: -1px;\n            border-radius: 3px;\n            position:absolute;\n\n        }\n\n        .instrumentNumber {\n            display: inline;\n            margin-left: -18px;\n            margin-top: 5px;\n            position:absolute;\n        \n        }\n\n        .pausePlayButton {\n           margin-top: 10px;\n           margin-right: 0px;\n           width: 30px\n        }\n\n        .clearButton {\n            text-align: left;\n        }\n\n        .changeNoteMenu {\n            display: inline-block;\n        }\n    </style>\n</div>\n`\nmodule.exports.template = template\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3JjL2pzL3RlbXBsYXRlcy9zZXF1ZW5jZXJUZW1wbGF0ZS5qcz9iMWRhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLCtCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRlbXBsYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGVtcGxhdGUnKVxuXG50ZW1wbGF0ZS5pbm5lckhUTUwgPVxuXG5gPGRpdiBjbGFzcz1cInNlcXVlbmNlclwiPlxuICAgIDxkaXYgY2xhc3M9XCJsb2dzXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJicG1Mb2dcIj5CUE06IDE1MDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwibG9vcExlbmd0aExvZ1wiPkxlbmd0aDogMTYgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImlucHV0c1wiPlxuICAgICAgICA8aW5wdXQgY2xhc3M9XCJibXBJbnB1dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgdGVtcG8gKEJQTSkgbWF4ID0gMzAwIG1pbiA9IDMwXCI+PC9pbnB1dD5cbiAgICAgICAgPGlucHV0IGNsYXNzPVwibG9vcExlbmd0aElucHV0XCIgcGxhY2Vob2xkZXI9XCJFbnRlciBsb29wIGxlbmd0aCAobWF4ID0gMzIgbWluID0gMSlcIj48L2lucHV0PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJncmlkXCI+PC9kaXY+XG4gICAgPGltZyBjbGFzcz1cInBhdXNlUGxheUJ1dHRvblwiIHR5cGU9XCJwbGF5XCIgc3JjPVwiL2ltYWdlL2ljb25zOC1wbGF5LWJ1dHRvbi01MC5wbmdcIiBhbHQ9XCJwYXVzZS9wbGF5IGljb25cIj5cbiAgICA8ZGl2IGNsYXNzPVwiaW5mb1wiPkNsaWNrIGljb25zIGFuZCBudW1iZXJzIHRvIGNoYW5nZSB0cmFjayBzb3VuZDwvZGl2PlxuICAgIDxidXR0b24gY2xhc3M9XCJjbGVhckJ1dHRvblwiPkNsZWFyIEdyaWQ8L2J1dHRvbj5cbiAgICA8c3R5bGU+XG4gICAgICAgIC5zZXF1ZW5jZXIge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgICB3aWR0aDogNTAwO1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGF2ZW5pcjtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIHVzZXItZHJhZzogbm9uZTsgXG4gICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAgICAgICAgICAgLW8tdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgLmluc3RydW1lbnRMb2cge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICAgICAgbWFyZ2luOiAxMHB4O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGF2ZW5pcjtcbiAgICAgICAgfVxuICAgICAgICAubG9ncyB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLmxvZ3MgZGl2IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA3MHB4O1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA3MHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmluZm8ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICAgICAgbWFyZ2luOiAxMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgICAuaW5wdXRzIHtcbiAgICAgICAgICAgIGZsb2F0OiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAuaW5wdXRzIGlucHV0e1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgbWFyZ2luOiAxMHB4O1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDlweDtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogOXB4O1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiA4cHg7XG4gICAgICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAuZ3JpZCB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICBcbiAgICAgICAgfVxuXG4gICAgICAgIC5jZWxsIHtcbiAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgIHdpZHRoOiAxNXB4O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCA1cHggcmdiYSgwLCAwLCAwLCAuNSk7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgICBtYXJnaW46IDFweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLmluc3RydW1lbnRJY29ue1xuICAgICAgICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogLTQycHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAtMXB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIC5pbnN0cnVtZW50TnVtYmVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMThweDtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICBcbiAgICAgICAgfVxuXG4gICAgICAgIC5wYXVzZVBsYXlCdXR0b24ge1xuICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcbiAgICAgICAgICAgd2lkdGg6IDMwcHhcbiAgICAgICAgfVxuXG4gICAgICAgIC5jbGVhckJ1dHRvbiB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG5cbiAgICAgICAgLmNoYW5nZU5vdGVNZW51IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgfVxuICAgIDwvc3R5bGU+XG48L2Rpdj5cbmBcbm1vZHVsZS5leHBvcnRzLnRlbXBsYXRlID0gdGVtcGxhdGVcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwL3NyYy9qcy90ZW1wbGF0ZXMvc2VxdWVuY2VyVGVtcGxhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n")
  /***/ },
/* 5 */
  /***/ function (module, exports) {
    eval("const template = document.createElement('template')\n\ntemplate.innerHTML =\n\ntemplate.innerHTML =\n\n`<div class=\"synth\">\n    <div class=\"keyboard\">\n      <div class=\"settingsBar\">\n        <div class=\"volumeInput\">\n          <span>Volume: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\"\n              value=\"0.5\" list=\"volumes\" name=\"volume\">\n          <datalist id=\"volumes\">\n            <option value=\"0.0\" label=\"Mute\">\n            <option value=\"1.0\" label=\"100%\">\n          </datalist>\n        </div>\n        <span>Carrier Gain: </span>\n        <input type=\"range\" min=\"0\" max=\"3000\" step=\"1\"\n            value=\"1\" list=\"carrierGain\" name=\"carrierGain\">\n        <div class=\"modulationInput\">\n            <span>Modulation Freq: </span>\n            <input type=\"range\" min=\"1\" max=\"1500\" step=\"1\"\n                value=\"750\" list=\"modulationFreq\" name=\"modulationFreq\">\n            <span>Modulation Depth: </span>\n            <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\"\n                value=\"0\" list=\"modulationDepth\" name=\"modulationDepth\">\n        </div>\n        <div class=\"modulationInput\">\n          <span>Modulation 2 Freq: </span>\n          <input type=\"range\" min=\"1\" max=\"1500\" step=\"1\"\n              value=\"750\" list=\"modulation2Freq\" name=\"modulation2Freq\">\n          <span>Modulation 2 Depth: </span>\n          <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\"\n              value=\"0\" list=\"modulation2Depth\" name=\"modulation2Depth\">\n          \n        </div>\n        <div class=\"right\">\n          <span>Carrier waveform: </span>\n          <select name=\"waveform\">\n            <option value=\"sine\">Sine</option>\n            <option value=\"square\" selected>Square</option>\n            <option value=\"sawtooth\">Sawtooth</option>\n            <option value=\"triangle\">Triangle</option>\n          </select>\n          <span> Mod1 waveform: </span>\n          <select name=\"waveform2\">\n            <option value=\"sine\">Sine</option>\n            <option value=\"square\" selected>Square</option>\n            <option value=\"sawtooth\">Sawtooth</option>\n            <option value=\"triangle\">Triangle</option>\n          </select>\n          <span> Mod2 waveform: </span>\n          <select name=\"waveform3\">\n            <option value=\"sine\">Sine</option>\n            <option value=\"square\" selected>Square</option>\n            <option value=\"sawtooth\">Sawtooth</option>\n            <option value=\"triangle\">Triangle</option>\n          </select>\n        </div>\n        \n        <span>Keyboard octave: </span>\n        <select name=\"octave\">\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\" selected>3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n        </select>\n       \n       \n        <div class=\"effectSettings\"\n          <div class=\"effect\" id=\"flanger\">\n          <span>Flanger </span>\n          <br>\n          <span>Time: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\"\n              value=\"0\" list=\"flangerTime\" name=\"time\">\n          <br>\n          <span>Depth: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\"\n              value=\"0\" list=\"flangerDepth\" name=\"depth\">\n          <br>\n          <span>Speed: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\"\n              value=\"0\" list=\"flangerSpeed\" name=\"speed\">\n          <br>\n          <span>Feedback: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\"\n              value=\"0\" list=\"flangerFeedBack\" name=\"feedback\">\n          <br>\n          <span>Mix: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\"\n              value=\"0\" list=\"flangerMix\" name=\"mix\">\n          </div>\n\n          <div class=\"effect\" id=\"tremolo\">\n          <span>Tremolo </span>\n          <br>\n          <span>Depth: </span>\n          <input type=\"range\" min=\"0.0\" max=\"20\" step=\"0.01\"\n              value=\"0\" list=\"tremoloDepth\" name=\"depth\">\n          <br>\n          <span>Speed: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1000\" step=\"1\"\n              value=\"0\" list=\"tremoloSpeed\" name=\"speed\">\n          <br>\n          <span>Mix: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\"\n              value=\"0\" list=\"tremoloMix\" name=\"mix\">\n          </div>   \n\n          <div class=\"effect\" id=\"reverb\">\n          <span>Reverb </span>\n          <br>\n          <span>time: </span>\n          <input type=\"range\" min=\"0.0\" max=\"3\" step=\"0.01\"\n              value=\"0\" list=\"reverbTime\" name=\"time\">\n          <br>\n          <span>Decay: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1\" step=\"0.01\"\n              value=\"0\" list=\"reverbDecay\" name=\"decay\">\n          <br>\n          <span>Mix: </span>\n          <input type=\"range\" min=\"0.0\" max=\"1\" step=\"0.01\"\n              value=\"0\" list=\"reverbMix\" name=\"mix\">\n          <br>\n          </div>\n          \n        </div>\n    </div>\n  </div>\n  <div>\n<div>\n    <style>\n      .synth {\n        height: 110px;\n        white-space: nowrap;\n        margin-left: 10px;\n    \n      }\n      .keyboard {\n        height: 100px;\n        padding: 10px;\n        margin: 20px;\n        position: relative;\n       \n      }\n      \n      .key {\n        cursor: pointer;\n        font: 10px \"Open Sans\", \"Lucida Grande\", \"Arial\", sans-serif;\n        border: 1px solid black;\n        border-radius: 5px;\n        width: 20px;\n        height: 80px;\n        padding: 10px;\n        text-align: center;\n        box-shadow: 2px 2px darkgray;\n        display: inline-block;\n        position: relative;\n        margin-right: 3px;\n        user-select: none;\n        -moz-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none;\n      }\n      \n      .key div {\n        position: flexible;\n        bottom: 0;\n        text-align: center;\n        width: 100%;\n        pointer-events: none;\n      }\n      \n      .key div sub {\n        font-size: 10px;\n        pointer-events: none;\n      }\n      \n      .key:active {\n        background-color: #599;\n        color: #fff;\n      }\n\n      .sharpKey:active {\n        background-color: #599;\n        color: #fff;\n      }\n\n      \n      .octave {\n        margin-top: 10px;\n        display: inline-block;\n\n      }\n      \n      .settingsBar {\n        float: right;\n        margin: 20px;\n        margin-top: -100px;\n        padding: 20px;\n        font: 14px \"Open Sans\", \"Lucida Grande\", \"Arial\", sans-serif;\n        position: flexible;\n        height: auto;\n        width: auto;\n      }\n      .right {\n        margin-top: 10px;\n        text-align: left;\n      }\n\n      .volumeInput{\n        text-align: left;\n      }\n\n      .sharpKey {\n        cursor: pointer;\n        font: 10px \"Open Sans\", \"Lucida Grande\", \"Arial\", sans-serif;\n        border: 1px solid black;\n        border-radius: 5px;\n        width: 10px;\n        height: 80px;\n        padding: 10px;\n        text-align: center;\n        box-shadow: 2px 2px darkgray;\n        display: inline-block;\n        position: relative;\n        margin-right: 3px;\n        user-select: none;\n        -moz-user-select: none;\n        -webkit-user-select: none;\n        -ms-user-select: none;\n        background-color: black;\n        color: white;\n        margin-left: 20px;\n      }\n\n      .modulationInput{\n        text-align: left;\n      }\n\n      .lfoFreq{\n        text-align: left;\n        margin-top: 10px;\n      }\n\n      .effectSettings {\n        margin-top: 20px;\n        \n      }\n\n      .effect {\n        margin-top: 20px;\n        display: inline-block;\n      }\n    </style>\n</div>\n`\n\n{/* */}\n\nmodule.exports.template = template\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")
  /***/ },
/* 6 */
  /***/ function (module, exports) {
    eval('/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanM/NWY3MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fd2VicGFja19hbWRfb3B0aW9uc19fICovXHJcbm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX2FtZF9vcHRpb25zX187XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2FtZC1vcHRpb25zLmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')
  /***/ },
/* 7 */
  /***/ function (module, exports) {
    eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n")
  /***/ },
/* 8 */
  /***/ function (module, exports, __webpack_require__) {
    module.exports = __webpack_require__(0)
  /***/ }
/******/ ])
